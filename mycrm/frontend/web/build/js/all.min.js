"use strict";function loadError(e,t){var s=t.error;s.status&&s.statusText?(t.message="Выберите заведение",t.details="Ajax error: "+s.statusText+", status code = "+s.status):(t.message="Custom error: "+t.message,t.details="An error occurred during loading: "+s)}function preselectStaffPermissionsTree(){var e=jQuery.map(jQuery("#permissions_tree").fancytree("getRootNode").tree.getSelectedNodes(),function(e){return e.key});$("#staff_user_permissions").val(JSON.stringify(e))}function preselectStaffServiceTree(){var e=jQuery.map(jQuery("#services_tree").fancytree("getRootNode").tree.getSelectedNodes(),function(e){if($.isNumeric(e.key))return e.key});$("#staff_service_ids").val(JSON.stringify(e))}initColorPicker('select[name="Staff[color]"]'),$("#staff-division_id.single-division").trigger("change"),$("#staff-create_user").on("change",function(){this.checked?($(".inner-inputs-list .control-group").fadeIn("fast"),0===$("#staff-username").val().length&&$("#staff-username").val($("#staff-phone").val())):$(".inner-inputs-list .control-group").fadeOut("fast")}),$("#staff-create_user").change(),$(".staff-form form").submit(function(){return preselectStaffServiceTree(),preselectStaffPermissionsTree(),!0}),$("#staff-has_calendar").change(function(e){this.checked?($(".staff_color").fadeIn("fast"),$(".staff_services").fadeIn("fast")):($(".staff_color").fadeOut("fast"),$(".staff_services").fadeOut("fast"))}),$("#staff-name, #staff-surname").on("keyup",function(e){-1===$(this).val().toLowerCase().indexOf(String.fromCharCode(e.keyCode).toLowerCase())||$(this).capitalize()});
"use strict";function addNewPosition(){var e=prompt("Введите новое значение для списка");$.post("/company/position/add/",{name:e},function(e){if(e.success){var t=$("#staff-company_position_ids");$("<option></option>").attr("selected",!0).text(e.name).val(e.id).appendTo(t),t.trigger("change.select2")}else console.log(e.message)},"json")}function add_hours_to_hovered_slots(e){if("month"!=e.name){var t=get_column_width(),o=$(".fc-view:visible .fc-slats"),a=o.find(".fc-axis:first").outerWidth(),n=o.offset().left+a;$(".fc-time-helper").remove(),o.find('td.fc-widget-content:not(".fc-axis")').unbind("mousenter").unbind("mousemove").unbind("mouseleave").on("mouseenter mousemove",function(e){var o=Math.max(Math.floor((e.pageX-n)/t)),i=t*o+a,r=$(this).parent().attr("data-time").substring(0,5);$(this).html("<div class='fc-time-helper' style='left: "+i+"px'>"+r+" Новая запись</div>")}).on("mouseleave",function(){$(".fc-time-helper").remove()})}}function get_column_width(){return $(".fc-view:visible .fc-time-grid .fc-bg td.fc-day:first").outerWidth()}function alertMessage(e,t){bootbox.alert(e,t)}function dialogMessage(e,t,o){initDialog(bootbox.dialog({message:e,title:o,buttons:t}))}function confirmMessage(e,t){bootbox.confirm({message:e,callback:t})}function initDialog(e){e.init(function(){e.attr("tabindex","")})}function initColorPicker(e){var t=$(e);t.simplecolorpicker({picker:!0}).on("change",function(){$(".simplecolorpicker.icon").prop("class","simplecolorpicker icon "+$(this).val())}),$(".simplecolorpicker.icon").prop("class","simplecolorpicker icon "+t.val()),$("span.color").each(function(){var e=$(this);e.prop("class",e.attr("data-color"))}),$("body>span.simplecolorpicker").prop("class","simplecolorpicker picker color")}function initializeTree(e,t,o){var a={source:t,checkbox:!0,icon:!1,expanded:!0,selectMode:3,strings:{loading:"Загрузка...",loadError:"Произошла ошибка!",moreData:"Еще...",noData:"Нет данных."}};o&&(a.loadError=o),$(e).fancytree(a)}function printElem(e){var t=window.open("","PRINT");return t.document.write("<html><head><title>"+document.title+"</title>"),t.document.write("</head><body >"),t.document.write(e.html()),t.document.write("</body></html>"),t.print(),t.close(),!0}function addOption(e,t){$("#"+e).append($("<option></option>").attr("value",t.id).text(t.name))}$(function(){function e(e,t,o){var a=new RegExp("([?&])"+t+"=.*?(&|$)","i"),n=-1!==e.indexOf("?")?"&":"?";return e.match(a)?e.replace(a,"$1"+t+"="+o+"$2"):e+n+t+"="+o}function t(e,t){this.id=e,this.classname=t}$("#menu-toggler").click(function(){$("body").hasClass("sidebar-active")?$("body").removeClass("sidebar-active"):($("body").addClass("sidebar-active"),$("body").css("overflow","visible"))}),$("button[title], .titled[title]").qtip({style:"higher-zindex"}),$('[data-toggle="tooltip"]').tooltip(),$("#btn-show-more").on("click",function(e){var t=$(e.target);""!=t.attr("data-toggle")?(t.attr("data-toggle",""),$(".optional").removeClass("hidden")):(t.attr("data-toggle","optional"),$(".optional").addClass("hidden"))}),$(document).ajaxStart(function(){$("#loading_indicator").show()}),$(document).ajaxStop(function(){$("#loading_indicator").hide()}),$(".filter-per-page").change(function(t){var o=$(t.target),a=o.val(),n=o.attr("name");window.location.href=e(window.location.href,n,a)});var o=$(".division-form"),a=o.find("a.add-item");if(a.length){var n=function(e){var t=$(e.target),o=t.attr("data-target");$("#"+o).remove()};o.find(".remove-item").click(n);var i=function(e){var t=$(e.target),o=t.attr("data-target"),a=$("#"+o),i=a.closest(".controls"),r=a.clone(!1),c=$(".field-division-phones:last"),s=c.attr("id"),l="phones-"+(Number(s.replace("phones-",""))+1),d=r.find(".add-item");d.removeClass("add-item btn-primary"),d.addClass("remove-item btn-danger"),d.attr("data-target",l),d.find(".fa").prop("class","fa fa-minus"),d.click(n),r.prop("id",l),r.find("label").text(""),r.find("input").val("").inputmask("+7 999 999 99 99",{clearIncomplete:!0}),r.appendTo(i)};a.click(i)}t.prototype.submit=function(e){var t=$("#"+this.id),o=t.attr("action"),a=this;$.post(o,t.serialize()).done(function(t){t=JSON.parse(t),t.errors&&a.setErrors(t.errors),"success"==t.status&&e()}).fail(function(){alertMessage("Произошла ошибка")})},t.prototype.setErrors=function(e){var t=this;$.each(e,function(e,o){$(".field-"+t.classname+"-"+e).find(".help-block").text(o[0])})};var r=$("#btn-edit-categories");if(r.length){var c=$(".btn-add-category"),s={success:{label:"Сохранить",className:"btn-primary",callback:function(){var e=new t("category-form","servicecategory"),o=function(){bootbox.hideAll(),l.refreshTree()};return e.submit(o),!1}},danger:{label:"Отмена",className:"btn-default"}},l={addButtonsListeners:function(){var e=$(".btn-edit-category"),t=$(".btn-delete-category");e.click(l.editCategory),t.click(l.confirmDelete)},confirmDelete:function(e){confirmMessage("Вы уверены? Удаление приведет к потере данных.",function(){l.deleteCategory(e)})},deleteCategory:function(e){var t=$(e.target).attr("data-url");$.post(t).done(function(e){l.refreshTree()}).fail(function(){alertMessage("Произошла ошибка при удалении")})},editCategory:function(e){var t=$(e.target).attr("data-url");$.get(t).done(function(e){dialogMessage(e,s,"Категория")}).fail(function(){alertMessage("Произошла ошибка")})},loadTree:function(e){var t=r.attr("data-url");$.get(t).done(function(e){r.remove(),l.modifySidenav(e),l.showSidenavButtons(),l.addButtonsListeners()}).fail(function(){alertMessage("Произошла ошибка")})},modifySidenav:function(e){var t=$("#sidenav");t.find(".tree_options").remove(),t.find(".tree").replaceWith(e),t.css("background-color","rgb(255, 255, 255)")},refreshTree:function(){var e=r.attr("data-url");$.get(e).done(function(e){$("#sidenav").find(".simple-tree").replaceWith(e),l.addButtonsListeners()}).fail(function(){alertMessage("Произошла ошибка")})},showSidenavButtons:function(){c.show(),$(".btn-done").show()}};r.click(l.loadTree),c.click(l.editCategory)}$("#fullscreen").click(function(e){$(this).fadeOut()}),$("#js-edit-cash").click(function(e){e.preventDefault(),$("#cash-modal").modal("show")}),$("#js-transfer-cash").click(function(e){e.preventDefault(),$("#cash-transfer-modal").modal("show")}),$("#js-delete-cash").click(function(e){e.preventDefault();var t=e.target.href;confirmMessage("Вы уверены, что хотите удалить данную кассу?",function(e){e&&$.post({url:t,dataType:"json"}).done(function(e){e.error?$.jGrowl(e.error,{group:"flash_alert"}):($.jGrowl(e.message,{group:"flash_notice"}),window.location.href="index")}).fail(function(e){return $.jGrowl("Произошла ошибка при удалении. ",{group:"flash_alert"})})})})}),"undefined"!=typeof bootbox&&(bootbox.addLocale("ru",{OK:"Продолжить",CANCEL:"Отменить",CONFIRM:"Подтвердить"}),bootbox.setDefaults({locale:"ru"}));var formatRepoSelection=function(e){var t=e.element.innerHTML;return"<span class='select2-selection__choice__name' style='background-color: "+$(e.element).attr("back-color")+"; color: "+$(e.element).attr("font-color")+"'><i class='fa fa-tag'></i> "+t+"</span>"};$.fn.capitalize=function(){return $.each(this,function(){for(var e=this.value.split(" "),t=0,o=e.length;t<o;t++)e[t]=e[t].charAt(0).toUpperCase()+e[t].slice(1).toLowerCase();this.value=e.join(" ")}),this};
"use strict";function renderFiles(e){e.forEach(renderFile)}function renderFile(e){var i=decodeURI(e.path),l=i.replace(/^.*[\\\/]/,""),n=i;l.match(/.(jpg|jpeg|png|gif)$/i)||(n="/image/download.png");var e=$('<div class="col-sm-4"><figure class="img-thumbnail row-col"><div class="img-zoom-btn text-center"><i class="fa fa-search-plus"></i></div><img src="'+n+'" class="img img-responsive"><figcaption class="text-center"><span>'+l+'</span><a href="/timetable/delete-file?id='+e.id+'" class="js-delete-file pull-right"><span class="glyphicon glyphicon-trash"></span></a><a href="'+i+'" target="_blank" class="pull-right"><span class="glyphicon glyphicon-download"></span></a></figcaption></figure></div>');addFileListener(e),$(".order-files").append(e)}function addFileListener(e){e.find(".js-delete-file").click(function(e){e.preventDefault();var i=this;confirmMessage("Вы уверены, что хотите удалить файл?",function(e){e&&deleteFile(i)})}),e.find("img").click(function(e){var i=$(this).attr("src");$("#fullscreen img").attr("src",i),$("#fullscreen").fadeIn()})}function addFilesListener(){$(".js-delete-file").click(function(e){e.preventDefault();var i=this;confirmMessage("Вы уверены, что хотите удалить файл?",function(e){e&&deleteFile(i)})})}function deleteFile(e){$.get({url:e.href,dataType:"json"}).done(function(i){200==i.status&&($(e).closest(".col-sm-4").remove(),$.jGrowl(i.message,{group:"flash_notice"}))}).fail(function(e){$.jGrowl("Произошла ошибка при удалении файла",{group:"flash_error"})})}function clearFiles(){$("#files").find("input[name=file]").fileinput("clear"),$(".order-files").html("")}
"use strict";$(function(){function t(t){var e="Создать дневник";return r(t)&&(e="Открыть дневник"),"\n            <tr>\n                <td>"+moment(t.datetime).format("DD MMMM YYYY HH:mm")+"</td>\n                <td>"+t.staff_position+"</td>\n                <td>"+t.staff.fullname+'</td>\n                <td><a class="js-open-med-exam" href="#" data-visit-id="'+t.id+'">'+e+"</a></td>\n            </tr>\n        "}function e(t){return z.filter(function(e){return r(e)&&e.datetime<t.datetime}).reduce(function(t,e){return t&&t.datetime>e.datetime?t:e},void 0)}function n(){$(".js-open-med-exam").click(function(t){t.preventDefault();var n=$(t.target).data("visit-id");I=z[n];var a=[],o=[],i=[];if(r(I))o=I.medCard.tabs.map(function(t){return t.teeth}).reduce(function(t,e){return t.concat(e)},[]),i=I.medCard.tabs.map(function(t){return t.childTeeth}).reduce(function(t,e){return t.concat(e)},[]),a=I.medCard.tabs,H=o.map(function(t){return t.teeth_num});else{var d=e(I);d&&(o=d.medCard.tabs.map(function(t){return t.teeth}).reduce(function(t,e){return t.concat(e)},[]),i=d.medCard.tabs.map(function(t){return t.childTeeth}).reduce(function(t,e){return t.concat(e)},[]))}x(o),i.length>0&&M(),h(a),$("#medcard-modal").show("modal")})}function a(){$("#medcard-modal").hide("modal"),$(".selected-teeth").text(""),$(".medcard-tabs > tbody").html(""),I=null,C()}function r(t){return t.medCard}function o(){var t=[18,21,55,61,48,31,85,71],e=[11,28,51,65,41,38,81,75],n=[18,55,48,85],a="",r=I.medCard.tabs.map(function(t){return t.teeth}).reduce(function(t,e){return t.concat(e)},[]),o=r.filter(function(t){return d(t.teeth_num)});return $.each($(".teeth-view .order-tooth-img"),function(c,s){var m=parseInt(s.getAttribute("class").replace(/[^\d]*/,"")),h=d(m);if(!h||h&&o.length>0){var l=r.find(function(t){return t.teeth_num==m}),u=l?l.diagnosis_id:null,f=A[u],p=D(u)||"&nbsp;";if(t.indexOf(m)>-1){var g="text-align: left;";n.indexOf(m)>-1&&(g="text-align: right;"),a+='<div style="width: 50%; display: inline-block; box-sizing: border-box; padding: 4px 10px; '+g+'">'}a+=i(m,p,f),e.indexOf(m)>-1&&(a+="</div>")}}),a}function i(t,e,n){var a='<div style="display: inline-block; height: 45px; text-align: center; width: 35px; vertical-align: top;">';(t<29||t>=51&&t<=65)&&(a+='<span style="font-weight: 700; font-size: 13px;">'+t+"</span>"),a+='<span style="background-color: '+n+';display: inline-block;-webkit-print-color-adjust: exact;"><img src="/image/teeth.png" height="35" width="35" /></span>';return a+='<span style="margin-top: -13px; font-weight: 700; font-size: 12px; top: -16px; position: relative; display: block;">'+e+"</span>",(t>70||t>=31&&t<=48)&&(a+='<span style="font-weight: 700; font-size: 13px;">'+t+"</span>"),a+="</div>"}function d(t){return[[55,51],[65,61],[85,81],[75,71]].reduce(function(e,n){return e||n[0]>=t&&n[1]<=t},!1)}function c(t){var e="";return e+='<table style="float: right; padding-top: 20px"><tr><td align="right">'+t.staff.fullname+'</td></tr><tr><td style="border-bottom: 1px solid #000000; padding-top: 20px"></td></tr></table>'}function s(){var t=I.medCard.tabs.map(function(t){return t.services}).reduce(function(t,e){return t.concat(e)},[]),e="";if(t.length>0){e='<h4 align="center"><strong>Услуги</strong></h4>',e+='<table border="1" width="100%" cellspacing="0" cellpadding="10">',e+="<tr>",e+="<th>Название</th>",e+="<th>Количество</th>",e+="<th>Скидка, %</th>",e+="<th>Итого за услугу, тг.</th>",e+="</tr>",e+=t.reduce(function(t,e){var n="<tr>";return n+="<td>"+e.division_service_name+"</td>",n+='<td align="center">'+e.quantity+"</td>",n+='<td align="center">'+e.discount+"</td>",n+='<td align="center">'+e.price+"</td>",n+="</tr>",t+n},""),e+="</table><br/>";e+="<strong>Итого: "+t.reduce(function(t,e){return t+Number(e.price)},0)+" тг.</strong>"}return e}function m(){var t=[];return I.medCard.tabs.map(function(t){return t.comments}).reduce(function(t,e){return t.concat(e)},[]).forEach(function(e){void 0!==t[e.category_id]?t[e.category_id]+=" "+e.comment+";":t[e.category_id]=e.comment+";"}),t.reduce(function(t,e,n){var a=$("#comment-heading-"+n+" a").text();return""==e.replace(/^[0-9, :;]*/,"")?t:t+"<p><strong>"+a+"</strong></p><p>"+e+"</p>"},"")}function h(t){$(".medcard-tabs > tbody").html(t.reduce(function(t,e){return t+l(e)},"")),w(".medcard-tabs > tbody")}function l(t){var e=[];return t.teeth.length>0&&e.push("Детали: "+t.teeth.map(function(t){return t.teeth_num}).join(", ")),t.services.length>0&&e.push("Услуги: "+t.services.map(function(t){return t.division_service_name}).join(", ")),'<tr data-tab-id="'+t.id+'">\n            <td>\n                '+e.map(function(t){return t}).join("<hr/>")+'\n            </td>\n            <td class="text-right">\n                <a href="#" class=\'js-edit-medcard-tab\' data-tab-id="'+t.id+'"><i class="fa fa-pencil"></i></a>\n                <a href="#" class=\'js-delete-medcard-tab\' data-tab-id="'+t.id+'"><i class="fa fa-trash"></i></a>\n            </td>\n        </tr>'}function u(t){var e='<table class="table table-bordered">    <tr>        <th>Время</th>        <th>Сотрудник</th>        <th>Диагноз</th>    </tr>';return $.isArray(t)&&t.length?t.forEach(function(t){var n=moment(t.datetime).format("DD MMMM YYYY HH:mm");e+="    <tr>        <td>"+n+"</td>        <td>"+t.staff_name+"</td>        <td>"+t.diagnosis_name+"</td>    </tr>"}):e+='    <tr>        <td colspan="3" align="center">Нет изменении</td>    </tr>',e+="</table>"}function f(){$("#medcard-modal").hide("modal"),$("#medcard-tab-modal").show("modal")}function p(t){t.forEach(function(t){var e=$(".teeth-form"),n=e.find(".order-tooth-wrapper-"+t);n.find(".tooth-number").hide(),n.find(".order-tooth-img").hide(),n.find(':input[name^="MedCard[teeth]['+t+']"]').prop("disabled",!0)})}function g(){$(".teeth-form .order-tooth-wrapper .order-tooth-img").show(),$(".teeth-form .order-tooth-wrapper .tooth-number").show(),$(".teeth-form .order-tooth-wrapper :input").prop("disabled",!1)}function b(){$.post({url:"/med-card/default/create?order_id="+I.id,data:$("#medcard-tab-form").serialize(),dataType:"json"}).done(function(t){t.errors&&t.errors.teeth?$.jGrowl(t.errors.teeth,{group:"flash_alert"}):($.jGrowl("Успешно сохранено",{group:"flash_notice"}),I.medCard||(I.medCard=t.medCard,I.medCard.tabs=[],$(".js-open-med-exam[data-visit-id="+I.id+"]").text("Открыть дневник")),I.medCard.tabs.push(t.tab),$(".medcard-tabs > tbody").append(l(t.tab,!1)),w(".medcard-tabs > tbody > tr:last"),H=H.concat(t.tab.teeth.map(function(t){return t.teeth_num})),j())}).fail(function(){$.jGrowl("Произошла ошибка при сохранении",{group:"flash_alert"})})}function v(t){$.post({url:"/med-card/default/update?tab_id="+t,data:$("#medcard-tab-form").serialize(),dataType:"json"}).done(function(e){if(e.errors&&e.errors.teeth)$.jGrowl(e.errors.teeth,{group:"flash_alert"});else{$.jGrowl("Успешно сохранено",{group:"flash_notice"});var n=I.medCard.tabs.find(function(e){return e.id==t}),a=n.teeth.map(function(t){return t.teeth_num});H=H.filter(function(t){return!(a.indexOf(t)>-1)}),H=H.concat(e.tab.teeth.map(function(t){return t.teeth_num})),n.diagnosis_id=e.tab.diagnosis_id,n.diagnosis=e.tab.diagnosis,n.comments=e.tab.comments,n.teeth=e.tab.teeth,n.childTeeth=e.tab.childTeeth,n.services=e.tab.services,$(".medcard-tabs > tbody tr[data-tab-id="+n.id+"]").find("td:first").text(n.teeth.map(function(t){return t.teeth_num}).join(",")),j()}}).fail(function(){$.jGrowl("Произошла ошибка при сохранении",{group:"flash_alert"})})}function _(t){$.post({url:"/med-card/default/delete?tab_id="+t,dataType:"json"}).done(function(e){var n=I.medCard.tabs.find(function(e){return e.id==t}),a=I.medCard.tabs.filter(function(e){return e.id!=t});I.medCard.tabs=a;var r=n.teeth.map(function(t){return t.teeth_num});H=H.filter(function(t){return!(r.indexOf(t)>-1)}),r.forEach(function(t){$(".order-tooth-img-"+t).html('<img src="/image/teeth.png" width="35" height="35"/>').css("background-color","").data("company_customer_id","")}),$(".medcard-tabs > tbody tr[data-tab-id="+t+"]").remove(),$.jGrowl("Успешно удалено",{group:"flash_notice"})}).fail(function(){$.jGrowl("Произошла ошибка при удалении",{group:"flash_alert"})})}function y(t){var e=$("#js-diagnoses-list");if(t.diagnosis_id){if(!e.find("option[value='"+t.diagnosis_id+"']").length){var n="("+t.diagnosis.code+") "+t.diagnosis.name,a=new Option(n,t.diagnosis_id,!0,!0);e.append(a)}e.val(t.diagnosis_id).trigger("change")}else e.val("").trigger("change.select2")}function w(t){$(t).find(".js-edit-medcard-tab").click(function(t){t.preventDefault();var e=$(this).data("tab-id");if($(".js-save-medcard-tab").data("tab-id",e),I.medCard){var n=I.medCard.tabs.find(function(t){return t.id==e}),a=n.teeth.map(function(t){return t.teeth_num});$("#medcard-tab-modal").find(".modal-title").text("Область"),y(n),G(n.teeth),N(n.comments),n.childTeeth.length>0&&M("teeth-form"),renderMedCardServices(n.services),p(H.filter(function(t){return!(a.indexOf(t)>-1)}))}f()}),$(t).find(".js-delete-medcard-tab").click(function(t){var e=$(this).data("tab-id");confirmMessage("Вы уверены, что хотите удалить данные?",function(t){t&&_(e)})})}function j(t){$("#medcard-tab-modal").hide("modal"),$("#medcard-modal").show("modal"),g(),k(),$(".comments-form .panel-collapse.collapse").collapse("hide"),$(".order_comment_item").val(""),$("#js-diagnoses-list").val("").trigger("change.select2"),$("#med_card_services_table").html(""),$("#med_card_services_tabbed_table tbody").html(""),$("#med_card_services_tabbed_table").hide(),$("#js-med-card-add-service").hide(),$(".field-medcard-services .select2").show()}function x(t){$.each(t,function(t,e){O(e.diagnosis_id,e.teeth_num);var n=D(e.diagnosis_id);n&&T(e.teeth_num,'<img src="/image/teeth.png" width="35" height="35"/><span class="tooth-number tooth-abbreviation">'+n+"</span>"),E(e.teeth_num)})}function C(){$(".order-tooth-img").html('<img src="/image/teeth.png" width="35" height="35"/>').css("background-color",""),Y("teeth-view"),H=[]}function k(){$(".teeth-form .order-tooth-img").html('<img src="/image/teeth.png" width="35" height="35"/>').css("background-color",""),Y("teeth-form"),$("#medcard-tab-form")[0].reset(),$(".order-mobility").hide(),S=[]}function M(t){var e=$("."+t+" .order-tooth-controls a");e.text(e.data("title-off")),e.data("enabled",1),$("."+t+" .child-tooth-row").show()}function Y(t){var e=$("."+t+" .order-tooth-controls a");e.text(e.data("title-on")),e.data("enabled",0),$("."+t+" .child-tooth-row").hide()}function O(t,e){t?$(".order-tooth-img-"+e).css("background-color",A[t]).data("company_customer_id",I.company_customer_id):$(".order-tooth-img-"+e).css("background-color","").data("company_customer_id",I.company_customer_id)}function D(t){return X.hasOwnProperty(t)?X[t]:1==t?"X":null}function E(t){$(".order-tooth-img-"+t).data("company_customer_id",I.company_customer_id)}function T(t,e){$(".order-tooth-img-"+t).html(e)}function G(t){t.forEach(function(t,e){$(".teeth-form .order-tooth-wrapper-"+t.teeth_num+" select").val(t.diagnosis_id).change()})}function N(t){t.forEach(function(t,e){t.comment?$("#comment-collapse-"+t.category_id).collapse("show"):$("#comment-collapse-"+t.category_id).collapse("hide"),$("#js-order_comment_"+t.category_id).val(t.comment)})}var z=[],H=[],I=null,S=[],X=$(".order-tooth").data("abbreviations"),A=$(".order-tooth").data("colors");window.loadMedCards=function(e){$.getJSON(api_host+"/v2/order",{company_customer_id:e,"access-token":user_token,expand:"medCard,staff,customer,staff_position",pagination:!1}).done(function(e){$.each(e,function(e,n){z[n.id]=n,$("#med-exams tbody").append(t(n))}),n()})},window.clearMedCards=function(){z=[],$("#med-exams > tbody").html("")},$(".js-close-medcard").click(a),$(".js-print-medcard").click(function(t){$(".print-division-logo").hide(),$("#print-division-logo-"+I.division_id).show();var e=$("#js-print-header").html();if(r(I)){var n=""==company_phone?"":"Телефон: <b>"+company_phone+"</b>",a=""==I.customer.phone?"":"Телефон: <b>"+I.customer.phone+"</b>";a="";var i="<div style='width: 700px; margin: 0 auto;'>\n                <table width='100%'>\n                    <tr>\n                        <td colspan=\"2\" align=\"center\">\n                            "+e+"\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" align='right'>Дата приема: <b>"+moment(I.datetime).format("DD MMMM YYYY HH:mm")+"</b></td>\n                    </tr>\n                    <tr>\n                        <td>Пациент: <b>"+I.customer.fullname+"</b></td>\n                        <td align='right'>Врач: <b>"+I.staff.fullname+"</b></td>\n                    </tr>\n                    <tr>\n                        <td>"+a+"</td>\n                        <td align='right'>"+n+"</td>\n                    </tr>\n                </table>\n                <br>\n                <h3 align='CENTER'><strong>Дневник истории болезни № "+I.medCard.number+"</strong></h3>\n            ";i+=o(),i+=m(),i+=s(),i+=c(I),i+="</table></div>",printElem($(i))}}),$(".js-create-medcard-tab").click(function(t){$(".teeth-form .order-tooth-img").html('<img src="/image/teeth.png" width="35" height="35"/>').css("background-color",""),$(".js-save-medcard-tab").removeData("tab-id"),$("#medcard-tab-modal").find(".modal-title").text("Новая область"),p(H),f()}),$(".js-teeth-history").click(function(t){var e=$(this).data("teeth");$("#js-teeth-number").html(e);var n=$(".order-tooth-img-"+e).data("company_customer_id");void 0!==n?$.getJSON("/med-card/default/history",{teeth:e,company_customer_id:n}).done(function(t){$("#medcard-teeth-history").find(".modal-body").html(u(t))}):$("#medcard-teeth-history").find(".modal-body").html(u([])),$("#medcard-modal").hide("modal"),$("#medcard-teeth-history").show("modal")}),$(".js-save-medcard-tab").click(function(t){var e=$(".js-save-medcard-tab").data("tab-id");e?v(e):b()}),$(".js-close-teeth-history").on("click",function(){$("#medcard-teeth-history").hide("modal"),$("#medcard-teeth-history").find(".modal-body").html(""),$("#medcard-modal").show("modal")}),$(".js-close-medcard-tab").click(j),$(".js-select-tooth-diagnosis").change(function(t){var e=parseInt(t.target.dataset.tooth),n=D(t.target.value);n?T(e,'<img src="/image/teeth.png" width="35" height="35"/><span class="tooth-number tooth-abbreviation">'+n+"</span>"):T(e,'<img src="/image/teeth.png" width="35" height="35"/>'),8==t.target.value?$('.tooth-mobility[name="MedCard[teeth]['+e+'][mobility]"]').show():($('.tooth-mobility[name="MedCard[teeth]['+e+'][mobility]"]').hide(),$(this).closest(".popover").popoverX("hide")),O(t.target.value,e);var a=S.join(", ")+": ";isNaN(parseInt(t.target.value))?S=S.filter(function(t){return t!=e}):-1==S.indexOf(e)&&S.push(e);var r=S.join(", ")+": ";$.each($(".order_comment_item"),function(t,e){var n=e.value;n=n.search(a)>-1?n.replace(a,r):r+n,$(e).val(n)})}),$(".tooth-mobility").change(function(t){var e=t.target.dataset.tooth;isNaN(t.target.value)||(T(e,'<img src="/image/teeth.png" width="35" height="35"/><span class="tooth-number">'+t.target.value+"</span>"),$(this).closest(".popover").popoverX("hide"))}),$(".order-tooth-controls a").click(function(t){t.preventDefault();var e=$(this).data("enabled"),n=$(this).data("container");parseInt(e)?Y(n):M(n)})});
"use strict";!function(t){t.fn.tableHeadFixer=function(n){function i(){var i=function(n){n.each(function(n,i){var i=t(i),o=t(i).parent(),r=i.css("background-color");r="transparent"==r||"rgba(0, 0, 0, 0)"==r?null:r;var e=o.css("background-color");e="transparent"==e||"rgba(0, 0, 0, 0)"==e?null:e;var a=e||"white";a=r||a,i.css("background-color",a)})},o=function(n,i){for(var o=a.left,r=1,e=1;e<=o;e+=r){var c=r>1?e-1:e,f=t(n).find("> *:nth-child("+c+")"),l=f.prop("colspan");f.cellPos().left<o&&i(f),r=l}},r=function(n,i){for(var o=a.right,r=1,e=1;e<=o;e+=r){var c=r>1?e-1:e,f=t(n).find("> *:nth-last-child("+c+")"),l=f.prop("colspan");i(f),r=l}},e={head:!0,foot:!1,left:0,right:0,"z-index":0},a=t.extend({},e,n);a.table=this,a.parent=t(a.table).parent(),function(){var n=t(a.parent),i=t(a.table);n.append(i),n.css({"overflow-x":"auto","overflow-y":"auto"}),n.scroll(function(){var t=n[0].scrollWidth,i=n[0].clientWidth,o=n[0].scrollHeight,r=n[0].clientHeight,e=n.scrollTop(),c=n.scrollLeft();a.head&&this.find("thead tr > *").css("top",e),a.foot&&this.find("tfoot tr > *").css("bottom",o-r-e),a.left>0&&a.leftColumns.css("left",c),a.right>0&&a.rightColumns.css("right",t-i-c)}.bind(i))}(),1==a.head&&function(){var n=t(a.table).find("thead"),o=(n.find("tr"),n.find("tr > *"));i(o),o.css({position:"relative"})}(),1==a.foot&&function(){var n=t(a.table).find("tfoot"),o=(n.find("tr"),n.find("tr > *"));i(o),o.css({position:"relative"})}(),a.left>0&&function(){var n=t(a.table);a.leftColumns=t(),n.find("tr").each(function(t,n){o(n,function(t){a.leftColumns=a.leftColumns.add(t)})}),a.leftColumns.each(function(n,o){var o=t(o);i(o),o.css({position:"relative"})})}(),a.right>0&&function(){var n=t(a.table);a.right;a.rightColumns=t(),n.find("tr").each(function(t,n){r(n,function(t){a.rightColumns=a.rightColumns.add(t)})}),a.rightColumns.each(function(n,o){var o=t(o);i(o),o.css({position:"relative"})})}(),function(){var n=t(a.table);if(a.head){if(a.left>0){var i=n.find("thead tr");i.each(function(n,i){o(i,function(n){t(n).css("z-index",a["z-index"]+1)})})}if(a.right>0){var i=n.find("thead tr");i.each(function(n,i){r(i,function(n){t(n).css("z-index",a["z-index"]+1)})})}}if(a.foot){if(a.left>0){var i=n.find("tfoot tr");i.each(function(n,i){o(i,function(n){t(n).css("z-index",a["z-index"])})})}if(a.right>0){var i=n.find("tfoot tr");i.each(function(n,i){r(i,function(n){t(n).css("z-index",a["z-index"])})})}}}(),t(a.parent).trigger("scroll"),t(window).resize(function(){t(a.parent).trigger("scroll")})}return this.each(function(){i.call(this)})}}(jQuery),function(t){function n(n){var i=[];n.children("tr").each(function(n,o){t(o).children("td, th").each(function(o,r){var e,a,c=t(r),f=0|c.attr("colspan"),l=0|c.attr("rowspan");for(f=f||1,l=l||1;i[n]&&i[n][o];++o);for(e=o;e<o+f;++e)for(a=n;a<n+l;++a)i[a]||(i[a]=[]),i[a][e]=!0;var s={top:n,left:o};c.data("cellPos",s)})})}t.fn.cellPos=function(t){var i=this.first(),o=i.data("cellPos");if(!o||t){n(i.closest("table, thead, tbody, tfoot"))}return o=i.data("cellPos")}}(jQuery);
"use strict";function setSchedule(e,a,t,d){e.children(".workdate-title").hide(),e.children(".spinner").show(),$.ajax({type:a,url:t,data:d,success:function(a){e.children(".spinner").hide(),200==a.error?(!0===a.has_schedule?(e.data("start",d.start),e.data("end",d.end),e.data("break_start",d.break_start),e.data("break_end",d.break_end),e.addClass("has_schedule"),e.find(".workdate-title").text(d.start+"\n"+d.end)):e.removeClass("has_schedule"),$("select[name*=break]").val("")):500===a.error&&e.hasClass("has_schedule")&&e.find(".workdate-title").text(e.data("start")+"\n"+e.data("end")),e.find(".workdate-title").show()},error:function(a){e.children(".workdate-title").show(),e.children(".spinner").fadeOut("fast"),400===a.status&&alertMessage(a.responseJSON.message,function(){setBreak(d.break_start,d.break_end),$("#schedule-modal").modal("show")})},dataType:"json"})}function addSchedule(e){setSchedule(e,"GET","add",{staff_id:e.data("staff"),division_id:e.data("division"),date:e.data("date"),start:e.data("start"),end:e.data("end")})}function editSchedule(e,a,t,d,s){setSchedule(e,"GET","edit",{staff_id:e.data("staff"),division_id:e.data("division"),date:e.data("date"),start:a,end:t,break_start:d,break_end:s})}function deleteSchedule(e){var a={staff_id:e.data("staff"),division_id:e.data("division"),date:e.data("date")};e.find(".workdate-title").text(""),setSchedule(e,"GET","delete",a)}function setBreak(e,a){e&&($("select[name=break_start_hour]").val(e.split(":")[0]),$("select[name=break_start_minute]").val(e.split(":")[1])),a&&($("select[name=break_end_hour]").val(a.split(":")[0]),$("select[name=break_end_minute]").val(a.split(":")[1]))}$(function(){$("#staff-schedule-table").tableHeadFixer({left:1});var e=!1;$(".workdate").on("click",function(){e=$(this);var a=e.data("start"),t=e.data("end"),d=e.data("break_start"),s=e.data("break_end");$("select[name=start_hour]").val(a.split(":")[0]),$("select[name=start_minute]").val(a.split(":")[1]),$("select[name=end_hour]").val(t.split(":")[0]),$("select[name=end_minute]").val(t.split(":")[1]),setBreak(d,s),$(".btn-delete").addClass("hidden"),e.hasClass("has_schedule")?($(".btn-delete").removeClass("hidden"),$("#schedule-modal").modal("show")):addSchedule(e)});var a=$(".btn-save"),t=function(){if(e){var a=$("select[name=start_hour]").val()+":"+$("select[name=start_minute]").val(),t=$("select[name=end_hour]").val()+":"+$("select[name=end_minute]").val(),d=$("select[name=break_start_hour]").val(),s=$("select[name=break_start_minute]").val(),l=$("select[name=break_end_hour]").val(),n=$("select[name=break_end_minute]").val(),i=null,r=null;d&&s&&(i=d+":"+s),l&&n&&(r=l+":"+n),$("#schedule-modal").modal("hide"),editSchedule(e,a,t,i,r)}},d=$(".btn-delete"),s=function(){e&&($("#schedule-modal").modal("hide"),deleteSchedule(e))};a.click(t),d.click(s)}),$("#schedule-modal").on("hide.bs.modal",function(){$("select[name*=break]").val("")});
"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,a=Array(e.length);t<e.length;t++)a[t]=e[t];return a}return Array.from(e)}$(function(){function e(){$("#pendingorder-id").val(null),$("#pending-order-form")[0].reset(),$("#pending-order-modal").modal("hide")}function t(e){var t=$(this).data("id"),a=$(this).data("event"),i=moment(a.datetime).format("YYYY-MM-DD");$("#pendingorder-id").val(t),$("#pendingorder-date").val(i),$("#pendingorder-company_customer_id").val(a.company_customer_id),$("#pendingorder-customer_name").val(a.customer_name),$("#pendingorder-customer_phone").val(a.customer_phone),$("#pendingorder-staff_id").val(a.staff_id),$("#pendingorder-note").val(a.note),$("#pendingorder-division_id").val(a.division_id),$("#pending-order-modal").find(".js-delete-pending-order").show(),$("#pending-order-modal").modal("show")}function a(e){return $('\n            <tr class="draggable-order" data-id="'+e.id+'">'+i(e)+"</tr>\n        ").data("event",e)}function i(e){var t=moment(e.datetime).format("YYYY-MM-DD"),a=$(".checkboxuser[data-entity-id="+e.staff_id+"]").data("entity-name");return"\n            <td>"+e.customer_name+"<br>"+e.customer_phone+"</td>\n            <td>"+t+"<br>"+a+"</td>\n        "}var n=$("#calendar"),r=n.find("#timetable-calendar");if(r.length){var o=function(e){if($("#formModal .modal-footer button").attr("disabled",!1),$("#formModal .modal-footer button").not(".save-order-button").hide(),e){$(".save-order-button").text("Сохранить"),e.status==X?($(".save-order-button").attr("disabled",!0),$(".return-order-button").show()):e.status==Z?($(".save-order-button").attr("disabled",!0),$(".delete-order-button").show(),$(".return-order-button").show()):($(".checkout-order-button").show(),$(".disable-order-button").show());$("#timetable-division_id :selected").data("can-print")&&$(".print-order-button").show()}else $(".save-order-button").text("Создать запись")},d=function(e){var t=$("#order-form"),a=t.data("yiiActiveForm");return $.each(a.attributes,function(){this.status=2}),t.yiiActiveForm("validate"),0==t.find(".has-error").length&&b(t),!1},s=function e(t){$.ajax({url:"/timetable/checkout-event?id="+t,type:"post",data:$("#order-form").serialize(),success:function(a){if(a.errors)if(a.errors&&a.errors.ignore_stock){var i=a.errors.ignore_stock,n={success:{label:"Изменить",className:"btn-primary pull-right",callback:function(){$("#formModal .modal-footer button").attr("disabled",!1)}},danger:{label:"Все равно сохранить",className:"btn-default pull-right",callback:function(){$("#order-ignore_stock").val(1),e(t)}}};I(i,n)}else j(a.errors);else y(),r.fullCalendar("refetchEvents")},dataType:"json"})},l=function(e){$.ajax({url:"/timetable/return-event?id="+e,type:"get",success:function(t){y();var a=r.fullCalendar("clientEvents",e)[0];a.status=Q,a.editable=!0,a.className=a.color||$("input[data-entity-id="+a.staff_id+"]").attr("data-entity-color"),r.fullCalendar("updateEvent",a)},error:function(){alertMessage("Произошла ошибка при возврате записи"),$("#formModal .modal-footer button").attr("disabled",!1)},dataType:"json"})},c=function(){$(":checkbox").change(function(){var e=$(this),t=parseInt(e.data("entity-id"));if(t){if(this.checked)e.closest(".entity_list_item").addClass("active"),m(t,e.data("entity-division_id"),e.data("entity-name"),e.data("entity-color"),!0);else{if(1==ae.length)return this.checked=!0,alertMessage("Минимум один сотрудник должен быть выбран."),!1;e.closest(".entity_list_item").removeClass("active"),u(t,!0)}r.fullCalendar("refetchEvents")}})},m=function(e,t,a,i,n){ae.push(e),n&&r.fullCalendar("addResource",{id:e,staff_id:e,division_id:t,title:a,eventClassName:i})},u=function(e,t){var a=ae.indexOf(e);ae.splice(a,1),t&&r.fullCalendar("removeResource",e)},f=function(){$('input:radio[name="entities[]"]').change(function(){$(".entity_list_item").removeClass("active");var e=$(this);e.closest(".entity_list_item").addClass("active"),r.fullCalendar("refetchEvents"),te=e.attr("data-entity-id")})},v=function(e){$("#event-staff_id").val(e.staff_id),$("#order-company_cash_id option").attr("selected",!1),$.each(e,function(e,t){if("start"==e){var a=moment(t);$("#order-datetime").val(moment(t).format("YYYY-MM-DD HH:mm")),$("#order-datetimepicker").val(E(a.format("DD ")+a.format("MMMM ")+a.format("YYYY HH:mm")))}else"division_id"==e?$("#order-"+e).val(t).change():"customer"==e?($("#order-customer_source_id").val(t.source_id).change(),$("#order-customer_name").val(t.name),$("#order-customer_phone").val(t.phone)):"datetime"!=e&&$("#order-"+e).val(t)}),renderServices(e.services),renderProducts(e.products),renderContacts(e.contactCustomers),renderPayments(e),B(e.documents),renderFiles(e.files),calcServiceTotal(),calcProductsTotal(),calcTotal(),loadCustomer(e.company_customer_id),k(e.id),Y(e.company_customer_id),$("#order-referrer_id").trigger("change")},p=function(e,t){$.ajax({url:"/timetable/update-event-duration?id="+e.id,type:"post",data:{end:e.end.format("YYYY-MM-DD HH:mm:ss")},success:function(a){if(0==a.error)return e.services=a.services,g(e.end),!0;t()},error:function(){t()},dataType:"json"})},h=function(e,t){var a=e.resourceId;a||(a=e.staff_id),$.ajax({url:"/timetable/update-event-drop?id="+e.id,type:"post",data:{staff:a,start:e.start.format("YYYY-MM-DD HH:mm:ss")},success:function(i){if(0==i.error)return e.staff_id=a,e.datetime=e.start.format("YYYY-MM-DD HH:mm:ss"),g(e.end),!0;var n={success:{label:"Продолжить",className:"btn-primary pull-right",callback:t()}};I(i.message,n)},error:function(){t()},dataType:"json"})},b=function e(t){var a=!!$("#order-id").val(),i=r.fullCalendar("clientEvents",$("#order-id").val())[0],n=a?"/timetable/update-event?id="+i.id+"&expand=documents,files,products,services,payments,staff,contactCustomers,title,customer":"/timetable/add-event?expand=documents,files,products,services,payments,staff,contactCustomers,title,customer";$.ajax({url:n,type:"post",data:t.serialize(),success:function(n){if(n.errors)if(n.errors.customer_name){var o=n.errors.customer_name,d={success:{label:"Изменить",className:"btn-primary pull-right",callback:function(){}},danger:{label:"Все равно сохранить",className:"btn-default pull-right",callback:function(){$("#order-ignorenamewarning").val(1),e(t)}}};I(o,d)}else j(n.errors);else{a?($.each(n,function(e,t){i.hasOwnProperty(e)&&(i[e]=t)}),i.status==X&&(i.className="past_event"),r.fullCalendar("updateEvent",i),$.jGrowl("Запись сохранена успешно",{group:"flash_notice"})):(r.fullCalendar("renderEvent",n,!1),$.jGrowl("Запись создана успешно",{group:"flash_notice"})),y();var s=moment(n.end);g(s)}},dataType:"json"})},g=function(e,t){t=t||!1;var a=r.fullCalendar("getView");if("month"!=a.name&&e){var i=a.start,n=a.end,o=r.fullCalendar("option","maxTime"),d=r.fullCalendar("getDate"),s=e;t||(s=e.format("HH:mm")),(e>i&&e<n||t)&&s>o&&(r.fullCalendar("destroy"),r.fullCalendar($.extend(ce,{maxTime:s,defaultView:a.name,defaultDate:d})))}},_=function(e,t){if($.each($("input[name='entities[]']"),function(){$(this).prop("checked",!1).removeClass("active"),u($(this).data("entity-id"),t)}),0==e.length){var a=$("#timetable-division_id :selected").text();return void alertMessage('У филиала "'+a+'" не настроен график сотрудников. <a href="../schedule/index">Настроить график работы</a>')}$.each(e,function(e,a){var i=$(".checkboxuser[data-entity-id="+a.id+"]");m(a.id,i.attr("data-entity-division_id"),i.attr("data-entity-name"),i.attr("data-entity-color"),t),i.closest(".entity_list_item").addClass("active"),i.prop("checked",!0)})},y=function(){$("#formModal").modal("hide"),$("#order-id").val(""),$("#order-ignorenamewarning").val(0),$("#order-form")[0].reset(),$("#servicesTable tr").remove(),$("#payments table").remove(),$("#tabbedTable").hide(),$("#js-add-service").hide(),$("#order-division_service_id option").remove(),$(".field-order-division_service_id .select2").show(),$("#order-contacts").empty(),W(),clearFiles(),$("#products").find(".products-table > table > tbody").empty(),S(),clearMedCards(),R()},w=function(e,t){var a=$("#timetable-division_id").val();te=$(".checkboxuser[data-entity-division_id="+a+"]:first").data("entity-id"),$("."+e).each(function(e,i){var n=$(i),r=!1,o=parseInt(n.attr("data-entity-id")),d=n.data("entity-division_id")!=a;switch(t){case"radio":o==te&&(r=!0,n.closest(".entity_list_item").addClass("active"));break;case"checkbox":$.inArray(o,ae)>=0&&(r=!0,n.closest(".entity_list_item").addClass("active"))}n.replaceWith($("<input>",{type:t,class:"checkboxuser",name:n.attr("name"),value:n.attr("value"),checked:r,disabled:d,"data-entity-id":n.data("entity-id"),"data-entity-division_id":n.data("entity-division_id"),"data-entity-name":n.data("entity-name"),"data-entity-color":n.data("entity-color"),"data-entity-position":n.data("entity-position")}))})},k=function(e){$.getJSON("/timetable/history",{id:e}).done(function(e){var t="";e.forEach(function(e){t+="<tr><td>"+e.created_at+"</td><td>"+e.action+"</td><td>"+e.datetime+"</td><td>"+e.status+"</td><td>"+e.user+"</td></tr>"}),$("#history table > tbody").html(t)})},Y=function(e){$("#visits_tab").show(),$.get("/customer/customer/visits",{id:e},function(e){$("#visits").html(e)})},x=function(e,t){$("#"+e).length&&($("#"+e).autocomplete({source:"/timetable/search",minLength:1,select:function(e,a){return t(a),!1}}).autocomplete("instance")._renderItem=function(e,t){return $("<li>").append("<p style='padding: 6px 12px'>"+t.name+" "+t.lastname+" "+t.phone+" </p>").appendTo(e)})},M=function(e){$("#order-company_customer_id").val(e.item.id),$("#order-customer_name").val(e.item.name),$("#order-customer_phone").val(e.item.phone),$("input[data-attr=discount]").val(e.item.discount).change(),orderDiscount=e.item.discount,loadCustomer(e.item.id),Y(e.item.id)},D=function(e){$("#pendingorder-customer_name").val(e.item.name),$("#pendingorder-customer_phone").val(e.item.phone),$("#pendingorder-company_customer_id").val(e.item.id)},C=function(e){if($("#info_tab").hasClass("active")||$("#info_tab").addClass("active"),e){$(".tab").removeClass("active").show(),$("li.divider").show();$("#timetable-division_id :selected").data("can-print")?$("#tooth_tab").show():($("#tooth_tab").hide(),$("#docs_tab").hide())}else $(".tab").removeClass("active").hide(),$("li.divider").hide();$("#info").hasClass("active")||($(".tab-pane").removeClass("active"),$("#info").addClass("active"))},H=function(e,t){var a=!1;return $.each(e,function(e,i){var n=i.name.replace(/Order|[[\]]/gi,"");if(t.hasOwnProperty(n)){var r=""===t[n]?null:t[n],o=""===i.value?null:i.value;"datetime"==n&&(r=t.start.format("YYYY-MM-DD HH:mm")),r!=o&&(a=!0)}}),a},j=function(e){var t="";$.each(e,function(e,a){t+=a+"<br>"}),I(t,{success:{label:"Продолжить",className:"btn-primary pull-right",callback:function(){}}})},T=function(e){e>0?$("#js-order-use-cashback-button").show():$("#js-order-use-cashback-button").hide()},N=function(e){e<=0&&($("#payments").find(".payment_cashback_input").hide(),$("#payments").find(".payment-cashback").text(e),$("#payments").find(".payment-cashback").show())},E=function(e){return e.replace(/(?:^|\s)\S/g,function(e){return e.toUpperCase()})},I=function(e,t,a,i){a=a||"Внимание",bootbox.dialog({message:e,title:a,buttons:t,className:i||null})},O=function(e,t){$(".modal-datetime-title").text(t+"\n")},A=function(){$(".modal-datetime-controls").hide(),$(".modal-datetime-title").hide(),$(".modal-datetime").show()},S=function(){$(".modal-datetime-controls").show(),$(".modal-datetime-title").show(),$(".modal-datetime").hide()},q=function(){$("#formModal").modal("show")},F=function(e){$.each(e,function(t,a){var i="",n="input";switch(t){case"categories":case"source_id":case"gender":n="select",i=e[t+"_title"];break;case"sms_birthday":case"sms_exclude":i=e[t+"_title"];break;default:i=a}if($.isNumeric(i)||null!=i&&i.length||(i="Не задано"),$(".field-"+t).find(".info-block").text(i),"birth_date"!=t&&"insurance_expire_date"!=t||(a=moment(a).format("DD/MM/YYYY")),"debt"==t&&$(".js-pay-debt-button").data("debt",a),"sms_exclude"==t||"sms_birthday"==t)$(".field-"+t).find(n).prop("checked",a);else if("image"==t)$(".customer-form .avatar img").prop("src",a);else if("categories"==t){var r=a?a.map(function(e){return e.id}):[];$(".field-"+t).find(n).val(r).change()}else $(".field-"+t).find(n).val(a).change();"balance"==t&&($("#payments").data("balance",a),toggleBalanceButton(a),paymentList.calculateBalance(a)),"cashback_balance"==t&&($("#payments").data("cashback",a),T(a),N(a),$("#payments").find(".payment-cashback").text(a)),"insurance_company_id"==t&&0==oe&&$("#order-insurance_company_id").val(a).change()})},P=function(){var e=new FormData(document.getElementById("customer-form"));$.post({url:"/customer/customer/edit?expand=categories,debt,deposit,revenue,canceledOrders,finishedOrders,lastVisit,categories_title,source_id_title",data:e,processData:!1,contentType:!1}).done(function(e){"error"==e.status?$.each(e.errors,function(e,t){$(".customer-form .field-"+e).find(".help-block").html("<span class='text-danger'>"+t+"</span>")}):"success"==e.status&&(F(e.data),R())}).fail(function(e){alertMessage("Произошла ошибка при cохранении данных клиента")})},R=function(){$(".js-show-customer-form").text("Изменить данные клиента"),me=!1,$(".customer-form .info-block").show(),$(".customer-form .field-block").hide(),$(".customer-form .help-block").text(""),$("#imagefile").val(null)},z=function(e,t){r.fullCalendar("clientEvents",e)[0].documents.push(t)},V=function(e){var t="<tr>\n                <td>"+e.date+"</td>\n                <td>"+e.userName+"</td>\n                <td>"+e.templateName+'</td>\n                <td><a href="'+e.link+'">Открыть</a></td>\n                </tr>\n            ';$(".order-documents table > tbody").append(t)},B=function(e){e.forEach(V)},W=function(){$(".order-documents table > tbody").html("")},G=function(e){$("select[name=template_id]").empty(),$.get("/order/document/templates",{division_id:e}).done(function(e){$.each(e,function(e,t){$("select[name=template_id]").append($("<option>",{value:t.id}).text(t.name))})}).fail(function(){alertMessage("Произошла ошибка при загрузке списка документов")})},L=function(e){return moment.utc(e,"YYYY-MM/-DD HH:mm")},J=function(e){return moment(e).format("YYYY-MM-DD")},U=function(){return L(moment().format("YYYY-MM-DD HH:mm"))},K=function(e){e=e||r.fullCalendar("getView");var t=$(".fc-time-grid:visible .fc-slats").parent(),a=t.children(".timeline"),i=t.children(".timeline-arrow"),n=U(),o=moment.duration(ie),d=moment.utc(J(moment())).add(o),s=t.find(".fc-slats tr:first").height();if(0==a.length&&(a=$("<hr>").addClass("timeline"),i=$("<b></b>").addClass("timeline-arrow caret"),t.prepend(a),t.prepend(i)),!(e.start<n&&e.end>n))return a.hide(),void i.hide();a.show(),i.show();var l=+$("#timetable-interval").val().toString().substr(3,2),c=Math.floor(Math.floor(n.diff(d)/1e3/60/l)*s+s-1);if(a.css("top",c+"px"),i.css("top",c-4+"px"),"agendaWeek"==e.name){var m=$(".fc-today:visible"),u=m.position().left,f=m.outerWidth();a.css({left:u+"px",width:f+"px"})}else{var v=$(".fc-widget-header:visible .fc-axis").outerWidth();a.css("left",v+"px"),a.css("width",$(".fc-agenda-view:visible").outerWidth()-v-1+"px")}},Q=1,X=3,Z=4,ee=n.find("#timetable-selected-users"),te=ee.data("selected-user"),ae=ee.data("selected-users"),ie=r.data("duration-min"),ne=r.data("duration-max");n.find("#datepicker").datepicker({dayNamesMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],monthNames:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],firstDay:1,onSelect:function(e,t){var a=moment(e,"DD.MM.YYYY");$.getJSON("/timetable/working-period",{start:a.format("YYYY-MM-DD"),end:a.format("YYYY-MM-DD")}).done(function(e){r.fullCalendar("option","minTime",e.min),r.fullCalendar("option","maxTime",e.max),r.fullCalendar("gotoDate",a)})}}),$(".ui-datepicker-next.ui-corner-all").removeAttr("title"),$(".ui-datepicker-prev.ui-corner-all").removeAttr("title");var re=$(window).height(),oe=!1,de=void 0,se=localStorage.getItem("slotInterval")||"00:05:00",le=moment().subtract(.5,"hour").format("HH:mm:00"),ce={locale:"ru",defaultView:"agendaDay",timezone:"Asia/Almaty",allDayText:"весь день",allDaySlot:!1,slotDuration:se,slotLabelInterval:"01:00:00",weekNumbers:!0,displayEventTime:!0,displayEventEnd:!0,displayAnnotation:!0,selectHelper:!0,scrollTime:le,minTime:ie,maxTime:ne,contentHeight:re-110,aspectRatio:.001,axisFormat:"HH:mm",slotLabelFormat:"HH:mm",selectable:!0,editable:!0,droppable:!0,dropAccept:".draggable-order",eventDurationEditable:!0,eventOverlap:!0,events:{url:"/timetable/events?expand=documents,files,products,services,payments,staff,contactCustomers,title,customer",data:function(){var e=r.fullCalendar("getView").name,t={viewName:e,_csrf:$("meta[name=csrf-token]").attr("content"),division_id:$("#timetable-division_id").val(),position_id:$("#timetable-position_id").val()},a=[];return $.each($("input.checkboxuser:checked"),function(){a.push($(this).data("entity-id"))}),"agendaDay"!=e&&(t.staffs=a),t},type:"POST",error:function(){clearInterval(de),alertMessage("Проблемы с обновлением записей. Возможно, у вас проблемы с интернетом")},success:function(e){var t=r.fullCalendar("option","maxTime");void 0!==e&&e.length>0&&e[0].id&&(t=e[0].maxTime,g(t,!0))}},refetchResourcesOnNavigate:!0,resources:function(e,t,a,i){var n=r.fullCalendar("getView").name,o=r.fullCalendar("getDate");$.getJSON("/timetable/active-staff",{date:o.format("DD.MM.YYYY"),division_id:$("#timetable-division_id").val(),position_id:$("#timetable-position_id").val()}).done(function(t){"agendaDay"==n&&_(t,!1),e(t)})},resourceOrder:"staff_id",resourceRender:function(e,t,a){var i="Нет расписания",n=$(".checkboxuser[data-entity-id="+e.id+"]").data("entity-position");if(e.schedule){var r=moment(e.schedule.start_at).format("HH:mm"),o=moment(e.schedule.end_at).format("HH:mm");"00:00"==o&&(o="24:00"),i=r+" - "+o}return t.append('<div data-annotations-col="0" class="fc-annotation">'+i+"<br>"+n+"</div>")},select:function(e,t,a,i,n){o(),$("#payments").data("balance",0),$("#order-company_customer_id").val("");var d=n?n.eventClassName:$("input.checkboxuser:checked").data("entity-color");$("#order-color").val(d).change(),C(!1),O(0,e.format("DD MMMM YYYY HH:mm")),renderPayments(n),q();var s=n?n.id:$("input.checkboxuser:checked").data("entity-id"),l=n?n.division_id:$("input.checkboxuser:checked").data("entity-division_id");$("#order-hours_before").val(division_notification[l]),$("#event-staff_id").val(s),$("#order-division_id").val(l).change(),$("#order-datetime").val(e.format("YYYY-MM-DD HH:mm")),$("#order-datetimepicker").val(E(e.format("DD ")+e.format("MMMM ")+e.format("YYYY HH:mm"))),oe=!1,r.fullCalendar("unselect")},eventClick:function(e,t){o(e),v(e),C(!0),O(0,E(e.start.format("DD MMMM YYYY HH:mm"))),G(e.division_id),loadMedCards(e.company_customer_id),q(),oe=e},eventDrop:function(e,t,a,i,n,r){e.status==X&&a(),h(e,a)},eventResize:function(e,t,a){e.status==X&&a(),p(e,a)},eventRender:function(e,t){if(e.id){t.addClass(e.color);var a="<div class='js-show-event-tip fc-event-tip'><i class='fa fa-info'></i></div>";e.customer&&e.customer.balance<0&&(a+="<div class='js-show-customer-debt-tip fc-event-tip fc-event-tip_red'><i class='fa fa-dollar-sign'></i></div>"),e.customer&&0==e.customer.finishedOrders&&(a+="<div class='js-show-customer-new-tip fc-event-tip fc-event-tip_green'>Н</div>"),t.find(".fc-time").append(a)}},eventAfterRender:function(e,t,a){if(e.id){var i="";$.each(e.services,function(e,t){i+=t.service_name+"("+t.duration+"мин, "+t.price+"〒)<br>"});var n="";null!=e.end&&(n="<div class='event-description-item'><b>"+e.start.format("HH:mm")+" - "+e.end.format("HH:mm")+"</b></div>\n                            <div class='event-description-item'>"+e.customer.name+"</div>\n                            <div class='event-description-item'>"+e.customer.phone+"</div>\n                            <div class='event-description-item'>"+i+"</div>\n                            <div class='event-description-item'>"+e.note+"</div>\n                        ");var o={my:"left center",at:"right center"},d=r.fullCalendar("getResources"),s=Math.max.apply(Math,_toConsumableArray(d.map(function(e){return e.staff_id})));("agendaDay"!=a.name&&7==e.start.isoWeekday()||"agendaDay"==a.name&&s==e.staff_id)&&(o.my="right center",o.at="left center"),t.find(".js-show-event-tip").qtip({overwrite:!0,content:n,style:{classes:"qtip-light qtip-shadow qtip-calendar"},position:o}),t.find(".js-show-customer-new-tip").qtip({overwrite:!0,content:"Новый клиент",style:{classes:"qtip-light qtip-shadow qtip-calendar"},position:o}),t.find(".js-show-customer-debt-tip").qtip({overwrite:!0,content:"У клиента есть непогашенный долг",style:{classes:"qtip-light qtip-shadow qtip-calendar"},position:o})}},defaultTimedEventDuration:"00:30:00",eventReceive:function(e){e.documents=[],e.files=[]},drop:function(e,t,a,i){var n=this,o=$(this).data("id");o&&$.post({url:"/timetable/enable-pending?id="+o,dataType:"json"},{start:e.format("YYYY-MM-DD HH:mm:ss")}).done(function(e){return $(n).remove()}).fail(function(e){$.jGrowl("Произошла ошибка при добавлении записи в график.",{group:"flash_alert"}),r.fullCalendar("removeEvents",o)})},customButtons:{print:{text:"печать",click:function(){window.print()}}},header:{left:"prev,next today print",center:"title",right:"month,agendaWeek,agendaDay"},buttonText:{today:"сегодня",month:"месяц",week:"неделя",day:"день"},weekNumberTitle:"нед",views:{month:{columnFormat:"ddd"},agenda:{columnFormat:"ddd M/D"},week:{titleFormat:"DD MMM YYYY"},day:{titleFormat:"dddd, DD MMM YYYY"}},viewRender:function(e){"agendaDay"!=e.name?($(".entity_list_item").removeClass("active"),w("checkboxuser","radio"),f()):($(".entity_list_item").removeClass("active"),w("checkboxuser","checkbox"),c()),add_hours_to_hovered_slots(e),K(e)},lazyFetching:!1};r.fullCalendar(ce),setInterval(K,3e4),initColorPicker('select[name="Order[color]"]'),$("#timetable-division_id").change(function(){var e=$(this).val();$(".checkboxuser[data-entity-division_id!="+e+"]").prop("checked",!1).prop("disabled",!0).closest(".entity_list_item").removeClass("active");var t=".checkboxuser[data-entity-division_id="+e+"]";"agendaDay"!=r.fullCalendar("getView").name&&(t=".checkboxuser[data-entity-division_id="+e+"]:first"),$(t).prop("checked",!0).prop("disabled",!1).closest(".entity_list_item").addClass("active"),r.fullCalendar("refetchResources"),r.fullCalendar("refetchEvents")}),$("#timetable-position_id").change(function(){$("#timetable-division_id").change()}),function(e){$("#timetable-interval").val(e)}(se),function(){$("#timetable-interval").change(function(e){var t=$(this).val();localStorage.setItem("slotInterval",t),$("#timetable-calendar").fullCalendar("destroy"),$("#timetable-calendar").fullCalendar($.extend(ce,{slotDuration:t}))})}(),$(".close-order-button").on("click",function(){var e=!1;if(oe&&oe.status!=X){var t=$("#order-form"),a=t.serializeArray();e=H(a,oe)}else oe||(e=$("#order-customer_name").val()||$("#order-customer_phone").val());e?bootbox.dialog({message:"При закрытии данного окна все несохраненные данные будут утеряны. Продолжить?",title:"Вы уверены?",buttons:{success:{label:"Подтвердить",className:"btn-primary pull-left",callback:function(){return y()}},danger:{label:"Отменить",className:"btn-default pull-right"}}}):y()}),$(".delete-order-button").on("click",function(e){bootbox.dialog({message:"При изменении статуса запись исчезнет из таблицы.<br/>Но вы сможете просмотреть во вкладке 'Обзор'.<br/>Продолжить?",title:"Вы уверены?",buttons:{success:{label:"Подтвердить",className:"btn-danger pull-left",callback:function(){var e=$("#order-id").val();$.post("/timetable/delete-event?id="+e,{_csrf:$("meta[name=csrf-token]").attr("content")}).done(function(t){r.fullCalendar("removeEvents",e),y()}).fail(function(e){alertMessage("Что-то пошло не так. Проверьте подключение и попробуйте еще раз")})}},danger:{label:"Отменить",className:"btn-default pull-right",callback:function(){}}}})}),$(".cancel-order-button").on("click",function(e){var t=$("#order-id").val(),a=r.fullCalendar("clientEvents",t)[0];$.post("/timetable/cancel-event?id="+t,{_csrf:$("meta[name=csrf-token]").attr("content")}).done(function(e){a.status=Z,a.className="canceled_event",r.fullCalendar("updateEvent",a),$.jGrowl("Запись отменена успешно.",{group:"flash_notice"}),y()}).fail(function(e){alertMessage("Что-то пошло не так. Проверьте подключение и попробуйте еще раз")})}),$(".print-order-button").on("click",function(e){var t=$("#order-id").val(),a=r.fullCalendar("clientEvents",t)[0],i=$("#order-print").clone(),n=$("#timetable-division_id option[value="+a.division_id+"]"),o=$(".checkboxuser[data-entity-id="+a.staff_id+"]").data("entity-name");i.find(".division-name").text(n.text()),i.find(".division-address").text(n.data("address")),n.data("logo")?(i.find(".division-info > .logo > img").attr("src",n.data("logo")),i.find(".division-info > .logo").show()):i.find(".division-info > .logo").hide(),i.find(".staff-name").text(o),i.find(".order-key").text(a.number),i.find(".order-datetime").text(a.start.format("DD.MM.YYYY HH:mm")),i.find(".date-created").text(moment().format("DD.MM.YYYY HH:mm"));var d=[a.customer.name,a.customer.lastname,a.customer.patronymic].join(" ");i.find(".customer-fullname").text(d);var s=$("#servicesTable").find("tr");$.each(s,function(e,t){var a=$("<tr></tr>"),n=$(t).find("input[data-attr=discount]").val(),r=$(t).find("input[data-attr=price]").val(),o=$(t).find("input[data-attr=quantity]").val();a.append("<td>"+$(t).find(".order-service-column_name").text()+"</td>"),a.append("<td>"+r+"тг</td>"),a.append("<td>"+o+"</td>"),a.append("<td>"+n+"%</td>"),a.append("<td>"+Number(r*(100-n)/100)+"тг</td>"),i.find("table.services tbody").append(a)}),i.find(".order-price").text($("#order-price").val()+"тг"),i.find(".order-paid").text($("#order-paid").val()+"тг"),i.find(".order-debt").text($(".payment-debt").text()+"тг"),printElem(i)}),$(".return-order-button").on("click",function(e){e.stopImmediatePropagation(),$("#formModal .modal-footer button").attr("disabled",!0),l($("#order-id").val())}),$(".checkout-order-button").on("click",function(e){e.stopImmediatePropagation(),$("#formModal .modal-footer button").attr("disabled",!0),s($("#order-id").val())}),$(".save-order-button").on("click",function(e){return d()}),x("order-customer_name",M),x("order-customer_phone",M),x("pendingorder-customer_name",D),x("pendingorder-customer_phone",D),$("#order-customer_name").on("keyup",function(){$(this).capitalize()}),$("#order-price").on("change paste keyup",function(){calcTotal(),$(".order_payment_item").change()}),$(".change-datetime").click(function(){A()});var me=!1;window.loadCustomer=function(e){$("li.divider").show(),$("#customer_tab").show(),$("input[name=company_customer_id]").val(e),$.get("/customer/customer/info?expand=categories,debt,deposit,revenue,canceledOrders,finishedOrders,lastVisit,categories_title,source_id_title",{id:e}).done(function(e){F(e)}).fail(function(){alertMessage("Произошла ошибка при загрузке данных клиента")}),$(".js-pay-debt-button").data("company-customer",e)},$(".js-show-customer-form").click(function(e){e.preventDefault(),me?P():($(e.target).text("Сохранить данные клиента"),$(".customer-form .info-block").hide(),$(".customer-form .field-block").show(),me=!0)}),$(".js-generate-doc").click(function(e){var t=$("#order-id").val(),a=$("select[name=template_id]").val();$.get("/order/document/generate",{order_id:t,template_id:a}).done(function(e){z(t,e),V(e)}).fail(function(){alertMessage("Произошла ошибка при формировании документа")})})}$(".js-add-pending-order").click(function(e){$("#pendingorder-id").val(null),$("#pending-order-form")[0].reset(),$("#pending-order-modal").find(".js-delete-pending-order").hide(),$("#pending-order-modal").modal("show")}),$("#pending-order-form").on("beforeSubmit",function(e){var n=$("#pendingorder-id").val(),r="/timetable/add-pending";return n&&(r="/timetable/update-pending?id="+n),$.post({url:r,data:$("#pending-order-form").serialize(),dataType:"json"}).done(function(e){if(n){$("#waiting_list > table > tbody > tr[data-id="+n+"]").html(i(e));var r=$("#waiting_list > table > tbody > tr[data-id="+n+"]").data("event");$.each(e,function(e,t){r.hasOwnProperty(e)&&(r[e]=t)})}else $("#waiting_list > table > tbody").prepend(a(e)),$("#waiting_list > table > tbody > tr[data-id="+e.id+"]").click(t),$("#waiting_list > table > tbody > tr[data-id="+e.id+"]").draggable({helper:"clone",start:function(e,t){$(t.helper).css("width",$(e.target).width()+"px")},zIndex:999,revert:!0,revertDuration:0});$("#pendingorder-id").val(null),$("#pending-order-form")[0].reset(),$("#pending-order-modal").modal("hide")}).fail(function(e){alertMessage("Произошла ошибка при cохранении данных клиента")}),!1}),$(".js-delete-pending-order").click(function(t){confirmMessage("Вы уверены, что хотите удалить эту запись из листа ожидания?",function(t){if(t){var a=$("#pendingorder-id").val();$.post({url:"/timetable/delete-pending?id="+a,dataType:"json"}).done(function(t){t.error?$.jGrowl(t.message,{group:"flash_alert"}):(e(),$("#waiting_list > table > tbody > tr[data-id="+a+"]"),$.jGrowl(t.message,{group:"flash_notice"}))})}})}),$(".draggable-order").click(t),$(".draggable-order").draggable({helper:"clone",start:function(e,t){$(t.helper).css("width",$(e.target).width()+"px")},zIndex:999,revert:!0,revertDuration:0}),window.servicesSelectEvent=function(e){var t=$("#tabbedTable"),a=$("#servicesTable");t.show();var i=document.getElementById("servicesTable").rows.length,n={id:e.params.data.id,duration:e.params.data.element.dataset.duration,name:e.params.data.text,price:e.params.data.element.dataset.price,quantity:1,service_name:e.params.data.element.dataset.service_name,service_price:e.params.data.element.dataset.price},r=renderService(i,n);a.append(r),$(".field-order-division_service_id .select2").hide(),$("#js-add-service").show(),$("#order-division_service_id").val("").change(),loadProducts(e.params.data.id),calcServiceTotal()},$(".js-reset-customer").click(function(e){return e.preventDefault(),$("#order-company_customer_id").val(null),$("#order-customer_name").val(null),$("#order-customer_phone").val(null),!1}),window.servicesCloseEvent=function(e){document.getElementById("servicesTable").rows.length>=1&&($(".field-order-division_service_id .select2").hide(),$("#js-add-service").show())}});
"use strict";function checkIO(){setTimeout(function(){"function"!=typeof io||isNaN(id)?checkIO():setupIO()},1e3)}function setupIO(){socket=io("https://crm.mycrm.kz/"),socket.on("connect",function(){socket.emit("join",{client_id:$("#myid").val()}),socket.on("message",function(t){t.msg&&(t.type&&"jGrowl"==t.type?$.jGrowl(t.msg,{group:t.group}):addBox(t.msg))})}),socket.on("disconnect",function(){socket=io("https://crm.mycrm.kz/")})}function addBox(t){var o=$("<div>");o.html(t),o.addClass("notification"),o.css({transform:"translate(0px,100px)"}),$(".notifications").prepend(o),o.click(function(){$(this).addClass("removed"),$(this).bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(t){$(this).unbind(t),$(this).remove(),positionBoxes()})}),positionBoxes(o),document.getElementById("sound").play()}function positionBoxes(){timeoutId&&clearTimeout(timeoutId),$.each($(".notification"),function(t,o){var i={transform:"translate(0px,-"+165*t+"px)"};$(o).css(i),0===t&&(timeoutId=setTimeout(function(){$(o).remove(),positionBoxes()},1e4))})}var id=$("#myid").val(),socket,timeoutId;checkIO();
"use strict";$(document).ready(function(){var e=$(".customer-index"),t=!1,o=function(e){var t=$(".js-selected");e?t.removeClass("disabled"):t.addClass("disabled")};$(e).on("change","input[type=checkbox]",function(e){var t=$("#customers").yiiGridView("getSelectedRows");o(t.length>0)});e.on("click","#js-export-fetched",function(){downloadURL("export?mode=0")}),e.on("click","#js-export-all",function(){downloadURL("export?mode=1")});var a;e.on("click",".js-selected",function(){t=!1,a=$("#customers").yiiGridView("getSelectedRows"),$(".js-modal-customer-size").text(a.length)}),e.on("click",".js-fetched",function(){t=!1,a=$('input[name="js-fetched-customers"]').val(),a=JSON.parse(a),$(".js-modal-customer-size").text(a.length)}),e.on("click",".js-all",function(){t=!0;var e=$('input[name="js-customers-count"]').val();$(".js-modal-customer-size").text(e)});var s=function(e){var t=$("#js-modal-category-items").val(),o={customers:e,categories:t};$.post(l,o,function(e){$("#js-modal-category").modal("hide"),$("#customers-container").addClass("loading"),$.pjax.reload({container:"#pjax-container",timeout:1e4})})},n=function(e){var o=$("#js-modal-request-text").val(),a={all:t,customers:e,message:o};$.post(d,a,function(e){$("#js-modal-request").modal("hide"),"success"==e.status?($.jGrowl(e.message,{group:"flash_notice"}),$("#customers-container").addClass("loading"),$.pjax.reload({container:"#pjax-container",timeout:1e4})):$.jGrowl(e.message,{group:"flash_alert"})})},c=function(e){var t={customers:e};$.post(u,t,function(e){$("#customers-container").addClass("loading"),$.pjax.reload({container:"#pjax-container",timeout:1e4})})},r=function(e){var t=$("#merged-customers").find("input[name=primary_merge_id]:checked").val();if(!t)return!1;var o={customer_ids:e.filter(function(e){return e!=t})};$.post("merge?id="+t,o).done(function(e){$.jGrowl(e,{group:"flash_notice"}),$("#customers-container").addClass("loading"),location.reload()}).fail(function(){$.jGrowl("Произошла ошибка",{group:"flash_alert"})})};e.on("click",".js-button-request:not(.disabled)",function(){$("#js-modal-request").modal("show")}),e.on("click",".js-button-category:not(.disabled)",function(){$("#js-modal-category").modal("show")}),e.on("click",".js-button-delete:not(.disabled)",function(){1==confirm("Вы уверены что хотите удалить данных клиентов?")&&a&&c(a)}),e.on("click",".js-merge-selected:not(.disabled)",function(){var e="<table id='merged-customers' class='table table-bordered'><thead><tr><th></th><th>ID</th><th>Клиент</th></tr></thead>";a.forEach(function(t){var o=$("#customers-container").find("table tr[data-key="+t+"]").clone();o.find("td:gt(2)").remove(),$(o).find("input").attr({type:"radio",name:"primary_merge_id"}),e+="<tr>"+o.html()+"</tr>"}),e+="</table>",dialogMessage(e,{success:{label:"Сохранить",className:"btn-primary",callback:function(){a&&r(a)}},danger:{label:"Отмена",className:"btn-default"}},"Выберите основного клиента")}),$("#js-modal-category-submit").on("click",function(){a&&s(a)}),$("#js-modal-request-submit").on("click",function(){(a||t)&&n(a)}),$("#js-modal-request-text").keyup(function(){var e=$(".js-modal-request-symbols"),t=$(".js-modal-request-count"),o=$(this).val();e.text(o.length);var a=0;a=-1!==o.search(/[^a-zA-z0-9._?~!@#$%^&*()`\[\]{}\"\';:,.\/<>?| ]/)?parseInt(o.length/70)+1:parseInt(o.length/160)+1,t.text(a)});var i,l="add-categories",d="send-request",u="delete-customers";window.downloadURL=function(e){i?i.attr("src",e):i=$("<iframe>",{id:"idown",src:e}).hide().appendTo("body")},e.on("click",".js-customers-search",function(){$("#customers-container").addClass("loading")})});
"use strict";$(document).ready(function(){function o(){$(".js-form-discount").hide(),$(".js-form-rank").hide(),$(".js-form-category").hide(),$("#js-form-discount").val()}$("#ajaxCrudModal").on("change","#js-form-mode",function(){var s=$("#js-form-mode").val();o(),0==s&&$(".js-form-discount").show(),1!=s&&3!=s||$("#js-form-discount").val(0),2==s&&$(".js-form-rank").show(),4!=s&&5!=s||$(".js-form-category").show()})});
"use strict";$(function(){function r(r){$("#order-grid-form").submit()}$(".js-reset-order").click(r)});
"use strict";$(function(){var e,t="import";$("#js-import,.js-import").click(function(){function a(){$.ajax({url:"process",success:function(t){var a=$(".progress-bar");a.attr("aria-valuenow",t),a.css("width",t+"%"),a.html(t+"%"),100==t&&(window.clearInterval(e),e=window.setInterval(o,1e3))}})}function o(){var t=$(".progress-bar");t.css("width","100%"),t.html("100%"),t.html("Завершено"),window.clearInterval(e)}var s=$("[name='csrf-token']").attr("content"),r="<div><form id='upload-form' action='import' method='post' enctype='multipart/form-data'><input type='hidden' name='_csrf' value='"+s+"'><label class='upload-area' style='width:100%;text-align:center;' for='fupload'><input id='fupload' name='fupload' type='file' style='display:none;' multiple='true'><i class='fa fa-cloud-upload fa-3x'></i><br />Нажмите чтобы выбрать файл</label><br /><span style='margin-left:5px !important;' id='fileList'></span></div><div class='clearfix'></div></form>",l=$(this).data("url");l&&(t=l),bootbox.dialog({message:r,title:"Импорт файла",buttons:{success:{label:"Импорт",className:"btn-default",callback:function(){var r=$("#fupload").prop("files")[0],l=new FormData;l.append("ImportForm[excelFile]",r),l.append("_csrf",s),$.ajax({url:t,dataType:"json",cache:!1,contentType:!1,processData:!1,data:l,type:"post",success:function(e){$("#progress-message").html(e.message).show(),$(".bootbox-close-button").prop("disabled",!1),$(".js-close-import").prop("disabled",!1),e.incorrect&&e.incorrect.length&&$("#import-incorrect-rows").html("Следующие строки содержат замечания: "+e.incorrect.reduce(function(e,t){return e+"<p>"+t.row+": "+t.error+"</p>"},"")).show(),o()},error:function(){window.clearInterval(e),$.jGrowl("Произошла ошибка при импорте.",{group:"flash_alert"}),bootbox.hideAll()}}),bootbox.dialog({closeButton:!0,title:"Импорт...",message:'\n            <div class="progress">\n                <div class="progress-bar progress-bar-success progress-bar-striped" role="progressbar" aria-valuenow="0"\n                        aria-valuemin="0" aria-valuemax="100" style="width:0%">\n                    \'0%\'\n                </div>\n            </div>\n            <div id="progress-message" class="alert alert-info" style="display:none"></div>\n            <div id="import-incorrect-rows" class="alert alert-danger" style="display:none"></div>\n        ',buttons:{cancel:{label:"Закрыть",className:"btn-primary pull-right js-close-import",callback:function(){bootbox.hideAll(),location.reload()}}}}),$(".bootbox-close-button").prop("disabled",!0),$(".js-close-import").prop("disabled",!0),e=window.setInterval(a,2e3)}}}}),document.getElementById("fupload").addEventListener("change",function(e){for(var t="",a=0;a<this.files.length;a++)t+='<div class="col-xs-12 file-list text-center">'+this.files[a].name+"</div>";$("#fileList").html(t)},!1)}),$("#js-download-template").click(function(){downloadURL("template")})});
"use strict";$(function(){function e(e,i){var c=i.discount||orderDiscount,s=$("<tr></tr>");s.data("service_price",i.service_price);var n='<td class="order-service-column_name">'+i.division_service_name+"</td>",p=$('<input type="number" name="MedCard[services]['+e+'][quantity]" value="'+i.quantity+'" class="order-service-input form-control" data-key="'+e+'" data-attr="quantity">'),v=$('<input type="hidden" name="MedCard[services]['+e+'][division_service_id]" class="order-service-input" value="'+i.division_service_id+'" data-key="'+e+'" data-attr="division_service_id">'),o=$('<input type="hidden" name="MedCard[services]['+e+'][order_service_id]" class="order-service-input" value="'+i.order_service_id+'" data-key="'+e+'" data-attr="order_service_id">'),u=$('<input type="number" name="MedCard[services]['+e+'][discount]" value="'+c+'" class="order-service-input form-control" data-key="'+e+'" data-attr="discount">'),l=$('<input type="number" name="MedCard[services]['+e+'][price]" value="'+i.price+'" class="order-service-input order-service-input_price form-control" data-key="'+e+'" data-attr="price">'),m=$('<a class="js-remove-service css-remove-service" href="#"><i class="icon sprite-delete"></i></a>');return m.click(a),u.bind("change keyup input",d),l.bind("change keyup input",t),p.bind("change keyup input",r),s.append(n),s.append($("<td></td>").append("кол-во ").append(p)),s.append($("<td></td>").append(v).append(o).append("скидка: ").append(u).append(" %")),s.append($("<td></td>").append("цена: ").append(l).append("〒")),s.append($("<td></td>").append(m)),s}function a(e){e.preventDefault();var a=document.getElementById("med_card_services_table").rows.length,t=$(e.target).closest("tr");t.find("input[data-attr=price]").val(),t.find("input[data-attr=discount]").val();t.remove(),1==a&&($("#med_card_services_tabbed_table").hide(),$("#js-med-card-add-service").hide(),$(".field-medcard-services .select2").show()),i()}function t(e){e.target.defaultValue=e.target.value,i()}function d(e){var a=$(e.target).closest("tr"),t=a.find('input[data-attr="quantity"]').val(),d=a.data("service_price"),r=e.target.value,c=Number(d*t*(100-r)/100);a.find('input[data-attr="price"]').val(c).change(),i()}function r(e){var a=e.target.value,t=$(e.target).closest("tr"),d=t.data("service_price"),r=t.find('input[data-attr="discount"]').val(),c=Number(d*a*(100-r)/100);e.target.defaultValue=a,t.find('input[data-attr="price"]').val(c).change(),i()}function i(){var e=0;$("#js-med-card-tab-services").find('input[data-attr="discount"]').filter(function(){var a=($(this).val(),$(this).closest("tr")),t=a.find('input[data-attr="price"]').val();a.find('input[data-attr="quantity"]').val();e+=Number(t)}),$("#medcard-price").val(e).change()}$("#js-med-card-add-service").click(function(e){$(e.target).hide(),$(".field-medcard-services .select2").show(),$("#medcard-services").select2("open")}),window.medCardServicesSelectEvent=function(a){var t=$("#med_card_services_table"),d=document.getElementById("med_card_services_table").rows.length,r={division_service_id:a.params.data.id,duration:a.params.data.options.duration,name:a.params.data.name,price:a.params.data.options.price,quantity:1,division_service_name:a.params.data.options.service_name,service_price:a.params.data.options.price},c=e(d,r);t.append(c),$(".field-medcard-services .select2").hide(),$("#js-med-card-add-service").show(),$("#med_card_services_tabbed_table").show(),$("#js-med-card-tab-services .control-label").hide(),i()},window.medCardServicesCloseEvent=function(e){document.getElementById("med_card_services_table").rows.length>=1&&($(".field-medcard-services .select2").hide(),$("#js-med-card-add-service").show())},window.renderMedCardServices=function(a){if(a&&a.length>0){var t=$("#med_card_services_table"),d=$("#med_card_services_tabbed_table");$.each(a,function(a,d){t.append(e(a,d))}),d.show(),$(".field-medcard-services .select2").hide(),$("#js-med-card-add-service").show(),i()}}});
"use strict";$(function(){$(".js-pay-debt-button").on("click",showDebtPaymentModal)}),window.toggleBalanceButton=function(t){t<0?$(".js-pay-debt-button").show():$(".js-pay-debt-button").hide(),t>0?$("#js-order-use-deposit-button").show():$("#js-order-use-deposit-button").hide()},window.showDebtPaymentModal=function(t){t.preventDefault();var o=$(this).attr("href"),e=$(this).data("company-customer"),n=$(this).data("debt"),a=$(this).data("reload");bootbox.prompt({title:"Погашение долга (Общий долг: "+n+")",inputType:"number",callback:function(t){t?$.get(o,{id:e,amount:t}).done(function(t){void 0!==a?window.location.reload():loadCustomer(e),$.jGrowl("Долг погашен",{group:"flash_notice"})}).fail(function(t){$.jGrowl(t.responseJSON.message,{group:"flash_alert"})}):$.jGrowl("Погашения долга отменено",{group:"flash_alert"})}})};
"use strict";function linebreak(n){return n.replace(two_line,"<p></p>").replace(one_line,"<br>")}function capitalize(n){return n.replace(first_char,function(n){return n.toUpperCase()})}function startRecognition(n){init_transcript=n.val(),recognition.onresult=function(i){for(var o="",t=0;t<i.results.length;++t)o+=i.results[t][0].transcript;n.val(init_transcript+" "+o)},recognizing=!0,recognition.start()}function stopRecognition(){$.jGrowl("Диктование текста завершено",{group:"flash_notice"}),recognizing=!1,recognition.stop()}var recognizing=!1,init_transcript="",target=void 0,recognition=void 0;"webkitSpeechRecognition"in window?(recognition=new webkitSpeechRecognition,recognition.continuous=!0,recognition.interimResults=!0,recognition.lang="ru-RU",recognition.onend=function(){recognizing&&(console.log("Внимение! Идет перезагрузка диктовки! Пожалуйста, остановите диктование текста."),$.jGrowl("Внимение! Идет перезагрузка диктовки! Пожалуйста, остановите диктование текста.",{group:"flash_alert"}),init_transcript=target.val(),recognition.start())},recognition.onerror=function(n){console.log(n.error),recognizing=!1,n.error,n.error,n.error}):(console.log("not working"),$(".js-voice-recognition").hide());var two_line=/\n\n/g,one_line=/\n/g,first_char=/\S/;$(".js-voice-recognition").bind("click",function(n){if(n.preventDefault(),recognizing)$(".js-voice-recognition").show(),$(this).text("Диктовать"),recognizing=!1,stopRecognition();else{$(".js-voice-recognition").hide(),$(this).text("Остановить диктование"),$(this).show();var i=$(this).data("target");target=$("#"+i),startRecognition(target)}});
"use strict";$(function(){$(".js-image-field").on("change",function(e){var i=$(this).parents(".js-image-field-wrapper");i.hide();var n=i.siblings(".chosen_photo");n.removeClass("hidden"),n.find(".photo_name").html(" "+$(e.target).val())}),$(".chosen_photo a").on("click",function(e){$(".js-image-field").trigger("click")})});
"use strict";function refreshComments(e,t){$.each(completeInputs,function(a,n){void 0!==completeInputs[a]&&$.getJSON(commentsUrl,{"access-token":t,category_id:a,diagnosis_id:e}).done(function(e){completeInputs[a].destroy(),completeInputs[a]=getAwesomeplete("#js-order_comment_"+a,e.map(function(e){return e.comment}))})})}function loadProducts(e,t){t=t||null,t?($.each(t,function(e,t){renderProduct(t),addPayments(t.price*t.quantity)}),calcProductsTotal()):$.get(serviceProductsUrl,{id:e}).done(function(e){e.results&&($.each(e.results,function(e,t){renderProduct(t),addPayments(t.price*t.quantity)}),calcProductsTotal())}).fail(function(){alertMessage("Произошла ошибка")})}function setupCompleteInput(e,t){$.getJSON(commentsUrl,{"access-token":t,category_id:e}).done(function(t){var a=t.map(function(e){return e.comment});completeInputs[e]=getAwesomeplete("#js-order_comment_"+e,a),$("#js-order_comment_"+e).on("focus",function(){completeInputs[e].minChars=0,completeInputs[e].evaluate(),completeInputs[e].open()})})}function getAwesomeplete(e,t){return new Awesomplete(e,{list:t,filter:function(e,t){return t=t.match(/[^: ]*$/)[0],Awesomplete.FILTER_STARTSWITH(e,t.match(/[^;]*$/)[0])},item:function(e,t){return Awesomplete.ITEM(e,t.match(/[^; ]*$/)[0])},replace:function(e){var t=this.input.value.match(/^(.*?):/),a=this.input.value.match(/[^:]*$/)[0].trim();a=a.match(/^.+;\s*|/)[0],t&&(a=t[0]+" "+a),this.input.value=a+e+"; "},sort:function(e,t){return e.toUpperCase()==t.toUpperCase?0:e.toUpperCase()<t.toUpperCase()?-1:1}})}function deleteEmptyRow(e){e.getElementsByTagName("table")[0].getElementsByTagName("tbody")[0].children[0].remove()}function makeProductTextCell(e,t){var a=document.createElement("td");return a.className=e,void 0!==t&&a.appendChild(document.createTextNode(t)),a}function makeProductCell(e,t,a,n,r){var c=document.createElement("td");c.className=e;var i=makeProductInput(t,a,n,r);return c.appendChild(i),c}function makeProductInput(e,t,a,n){var r=document.createElement("input");return r.type=e,r.required=!0,r.value=t||"",r.defaultValue=t||"",r.name=n||"","function"==typeof a&&a(r),r}function initializeProductAutocomplete(e){$(e).autocomplete({source:function(e,t){jQuery.get("../warehouse/product/search",{search:e.term},function(e){t(e.results)})},minLength:1,select:function(t,a){$(e).autocomplete("disable"),selectTimetableProduct(t,a.item)}}).autocomplete("instance")._renderItem=function(e,t){return $("<li class='ui-menu-item'>").append("<a>"+t.text+"</a>").appendTo(e)}}function updateProductPrice(e){var t=$(this).closest("tr").find(".product-quantity > input").val();reducePayments(this.defaultValue*t),this.defaultValue=this.value,addPayments(this.value*t),calcProductsTotal()}function updateProductQuantity(e){var t=$(e.target),a=t.closest(".data_table"),n=(a.attr("data-index"),t.closest("tr")),r=(n.index(),n.find(".product-stock-level").text()),c=n.find(".product-price > input").val();reducePayments(this.defaultValue*c),this.defaultValue=this.value,addPayments(this.value*c),$.isNumeric(r)&&this.value>Number(r)?(t.popover({placement:"left",content:"Недостаточно товара на складе",trigger:"manual"}),t.popover("show")):t.popover("destroy"),calcProductsTotal()}function selectTimetableProduct(e,t){var a=$(e.target).closest("tr");a.find(".ui-autocomplete-input").remove(),a.find(".product_id-input").val(t.id),a.find(".product-name").append(t.text),a.find(".product-unit").text(t.unit),a.find(".product-price input").val(t.price).change(),a.find(".product-stock-level").text(t.stock_level)}function serviceDiscountChanged(e){var t=e.target.value,a=e.target.defaultValue,n=$(this).closest("td").next("td").find('input[data-attr="price"]').val(),r=Number(n*(100-a)/100),c=Number(n*(100-t)/100);reducePayments(r),addPayments(c),e.target.defaultValue=t,calcServiceTotal()}function servicePriceChanged(e){var t=e.target.value,a=e.target.defaultValue,n=$(this).closest("td").prev("td").find('input[data-attr="discount"]').val(),r=Number(a*(100-n)/100),c=Number(t*(100-n)/100);reducePayments(r),addPayments(c),e.target.defaultValue=t,calcServiceTotal()}function serviceQuantityChanged(e){var t=e.target.value,a=$(e.target).closest("tr"),n=a.data("service_price"),r=(a.find('input[data-attr="discount"]').val(),Number(n*t));e.target.defaultValue=t,a.find('input[data-attr="price"]').val(r).change(),calcServiceTotal()}function calcServiceTotal(){var e=0;$('input[data-attr="discount"]').filter(function(){var t=$(this).val(),a=$(this).closest("tr"),n=a.find('input[data-attr="price"]').val();e+=Number(n*(100-t)/100)}),$("#order-price").val(e).change()}function reducePayments(e){$(".order_payment_item").each(function(){var t=$(this).val();t<e?($(this).val(Math.max(0,t-e)),e-=t):($(this).val(t-e),e=0)}),$(".order_payment_item").change()}function addPayments(e){var t=$(".order_payment_item:first");t.val(e+parseInt(t.val())),t.change()}function calcProductsTotal(){var e=0;$.each($("#products").find(".products-table").find(".product-row"),function(t,a){var n=$(a).find(".product-price > input").val(),r=$(a).find(".product-quantity > input").val();e+=Number(n*r)}),$("#order-productsprice").val(e).change()}function calcTotal(){var e=$("#order-price").val(),t=$("#order-productsprice").val(),a=Number(e)+Number(t);$("#order-total-price").val(Math.round(a))}function removeService(e){e.preventDefault();var t=document.getElementById("servicesTable").rows.length,a=$(e.target).closest("tr"),n=a.index(),r=a.find("input[data-attr=price]").val(),c=a.find("input[data-attr=discount]").val();a.remove(),calcServiceTotal(),1==t?($("#tabbedTable").hide(),$("#js-add-service").hide(),$("#order-division_service_id").val("").change(),$(".field-order-division_service_id .select2").show()):updateServiceIndexes(n),reducePayments(Number(r*(100-c)/100))}function renderService(e,t){var a=void 0===t.discount?orderDiscount:t.discount,n=$("<tr></tr>");n.data("service_price",t.service_price);var r='<td class="order-service-column_name">'+t.service_name+"</td>",c=$('<input type="number" name="Order[services]['+e+'][quantity]" value="'+t.quantity+'" class="order-service-input form-control" data-key="'+e+'" data-attr="quantity">'),i=$('<input type="number" name="Order[services]['+e+'][duration]" value="'+t.duration+'" class="order-service-input form-control" data-key="'+e+'" data-attr="duration">'),o=$('<input type="hidden" name="Order[services]['+e+'][division_service_id]" class="order-service-input" value="'+t.id+'" data-key="'+e+'" data-attr="division_service_id">'),d=$('<input type="hidden" name="Order[services]['+e+'][order_service_id]" class="order-service-input" value="'+t.order_service_id+'" data-key="'+e+'" data-attr="order_service_id">'),s=$('<input type="number" name="Order[services]['+e+'][discount]" value="'+a+'" class="order-service-input form-control" data-key="'+e+'" data-attr="discount">'),u=$('<input type="number" name="Order[services]['+e+'][price]" value="'+t.price+'" class="order-service-input order-service-input_price form-control" data-key="'+e+'" data-attr="price">'),l=$('<a class="js-remove-service css-remove-service" href="#"><i class="icon sprite-delete"></i></a>');return l.click(removeService),s.bind("change keyup paste",serviceDiscountChanged),u.bind("change keyup paste",servicePriceChanged),c.bind("change keyup paste",serviceQuantityChanged),addPayments(t.price*(100-a)/100),n.append(r),n.append($("<td></td>").append("кол-во ").append(c)),n.append($("<td></td>").append("мин ").append(i)),n.append($("<td></td>").append(o).append(d).append("скидка: ").append(s).append(" %")),n.append($("<td></td>").append("цена: ").append(u).append("〒")),n.append($("<td></td>").append(l)),n}function renderServices(e){if(e&&e.length>0){var t=$("#servicesTable");t.empty();var a=$("#tabbedTable");$.each(e,function(e,a){var n=renderService(e,a);t.append(n)}),a.show(),$(".field-order-division_service_id .select2").hide(),$("#js-add-service").show()}}function renderContacts(e){if(e&&e.length>0){var t=$("#order-contacts");$.each(e,function(e,a){addContact(e,a,t)})}}function addContact(e,t,a){var n='<div class="row">    <input type="hidden" id="order_contact_id_'+e+'" class="form-control"           name="Order[contacts]['+e+'][id]" value="'+t.id+'">    <div class="col-md-6">        <input type="text" id="order_contact_name_'+e+'" class="form-control"               name="Order[contacts]['+e+'][name]" autocomplete="off" value="'+t.name+'">        <p class="help-block help-block-error"></p>    </div>    <div class="col-md-5">        <input type="text" id="order_contact_phone_'+e+'" class="form-control"               name="Order[contacts]['+e+'][phone]" autocomplete="off"  value="'+t.phone+'">        <p class="help-block help-block-error"></p>    </div>    <div class="col-md-1">        <button type="button" class="btn btn-danger pull-right js-delete-contact">&ndash;</button>    </div>';a.append(n),initializeContactsAutocomplete("#order_contact_name_"+e,e,selectCustomerContact),initializeContactsAutocomplete("#order_contact_phone_"+e,e,selectCustomerContact),$("#order_contact_phone_"+e).inputmask({mask:"+7 999 999 99 99"}),$(".js-delete-contact").on("click",function(){$(this).closest(".row").remove()})}function selectCustomerContact(e,t){$("#order_contact_id_"+t).val(e.item.id),$("#order_contact_name_"+t).val(e.item.name),$("#order_contact_phone_"+t).val(e.item.phone)}function initializeContactsAutocomplete(e,t,a){var n=$(""+e);n.length&&(n.autocomplete({source:searchUrl,minLength:1,select:function(e,n){return a(n,t),!1}}).autocomplete("instance")._renderItem=function(e,t){return $("<li>").append("<p style='padding: 6px 12px'>"+t.name+" "+t.lastname+" "+t.phone+" </p>").appendTo(e)})}function updateServiceIndexes(e){$(".order-service-input").filter(function(){var t=$(this).attr("data-key");if(t>e){var a=t-1,n="Order[services]["+a+"]["+$(this).attr("data-attr")+"]";return $(this).attr("name",n),$(this).attr("data-key",a),!0}return!1})}function PaymentList(e,t){this.payments=t,this.total=0,this.eventStatus=e.status}function renderPayments(e){var t=e.division_id||$("#timetable-division_id").val(),a=JSON.parse(JSON.stringify($("#timetable-division_id option[value="+t+"]").data("payments")));paymentList=new PaymentList(e,a),$.each(e.payments,function(e,t){var a=paymentList.getPayment(t.payment_id);void 0!==a&&(a.amount=t.amount)}),$("#payments").append(paymentList.render()),paymentList.addAmountListener(),paymentList.calculateTotal(),$("#js-order-pay-debt-button").on("click",showDebtPaymentModal),$("#js-order-use-deposit-button").on("click",useDepositInTotalPrice)}function useDepositInTotalPrice(){var e=$(".payment-deposit").text();$(".order_payment_item").each(function(){var t=$(this).val(),a=Math.min(e,t);e-=a,t-=a,$(this).val(t)});var t=$(".payment-debt").text(),a=Math.min(e,t);e-=a,t-=a,$(".payment-debt").text(t),$(".payment-deposit").text(e),$(this).text("Депозит использован")}function renderProducts(e){e&&e.length>0&&($.each(e,function(e,t){renderProduct(t)}),calcProductsTotal())}function renderProduct(e){var t=document.createElement("tr");t.className="product-row";var a=e?e.product_id:null,n=e?e.quantity:1,r=(e&&e.purchase_price,e?e.price+"":0),c=e?e.unit:"",i=e?e.stock_level:"",o=null;o=e?makeProductTextCell("autocomplete-input-cell product-name",e.name):makeProductCell("autocomplete-input-cell product-name","text","",initializeProductAutocomplete);var d=makeProductInput("hidden",a,null,"Order[products]["+productCounter+"][product_id]");d.className="product_id-input",o.appendChild(d),t.appendChild(o),o=makeProductTextCell("product-unit",c),t.appendChild(o),o=makeProductCell("product-price","number",r,null,"Order[products]["+productCounter+"][price]"),t.appendChild(o),o=makeProductCell("product-quantity error-popover","number",n,null,"Order[products]["+productCounter+"][quantity]"),t.appendChild(o),o=makeProductTextCell("product-stock-level",i),t.appendChild(o),o=makeProductTextCell("delete-item-cell");var s=document.createElement("a");s.addEventListener("click",deleteProduct);var u=document.createElement("i");u.className="icon sprite-delete",s.appendChild(u),o.appendChild(s),t.appendChild(o),$(".products-table").find("table").append(t),productCounter++}function addProduct(e){renderProduct(),calcProductsTotal()}function deleteProduct(e){var t=$(e.target).closest("tr");reducePayments(t.find(".product-quantity > input").val()*t.find(".product-price > input").val()),t.remove()}window.orderDiscount=0;var paymentList=null,serviceProductsUrl="/division/service/formula",commentsUrl=api_host+"/v2/comment/default/index",completeInputs=[],productCounter=0;$(".tabs>.tabs-tab").click(function(e){e.preventDefault();var t=$(e.target);if(t.hasClass("active"))return!1;t.hasClass("tabs-tab")||(t=t.closest(".tabs-tab")),$(".tabs>.tabs-tab").removeClass("active"),t.addClass("active");var a=t.attr("data-target");$("#services, #products, #payments").hide(),$("#"+a).show()}),$("#order-productsprice").on("change paste keyup",function(){calcTotal(),$(".order_payment_item").change()});var searchUrl="/timetable/search";$("#js-add-contact").on("click",function(){var e=$("#order-contacts");addContact(e.find(".row").length+1,{id:"",name:"",phone:""},e)}),$("#js-add-service").click(function(e){$(e.target).hide(),$(".field-order-division_service_id .select2").show(),$("#order-division_service_id").select2("open")});var PAYMENT_TYPE_CASHBACK=3;PaymentList.prototype.render=function(){var e="<table><tbody>";$.each(this.payments,function(t,a){var n=a.amount||0,r=a.type==PAYMENT_TYPE_CASHBACK,c=2;r&&(c=1),e+="<tr>",e+='<td><label for="order_payment_'+a.id+'">'+a.name+"</label></td>",e+='<td colspan="'+c+'" >',r&&(e+='<span class="payment-cashback">'+n+'</span><div class="payment_cashback_input" style="display: none">'),e+='<input name="Order[payments]['+a.id+'][payment_id]" type="hidden" value="'+a.id+'">',e+='<input name="Order[payments]['+a.id+'][amount]" type="text" value="'+n+'" id="order_payment_'+a.id+'" \n                class="order_payment_item">',r&&(e+="<div>"),e+="</td>",r&&(e+='<td><a class="btn btn-default" id="js-order-use-cashback-button" style="'+(n<=0?"display:none":"")+'">Использовать кэшбэк</a></td>'),e+="</tr>"});e+='<tr><td><label>Депозит</label></td><td class="payment-deposit"></td><td><a class="btn btn-default" id="js-order-use-deposit-button">Использовать депозит</a></td></tr>';return e+='<tr><td><label>Долг</label></td><td class="payment-debt"></td><td><a class="btn btn-default js-pay-debt-button" id="js-order-pay-debt-button" href="/customer/customer/pay-debt" data-company-customer="0">Оплатить долг</a></td></tr>',e+="</tbody></table>"},PaymentList.prototype.addAmountListener=function(){var e=this;$(".order_payment_item").on("change paste keyup",function(t){var a=$(this).closest("tr").find("input[type=hidden]").val();e.getPayment(a).amount=$(this).val(),e.calculateTotal()})},PaymentList.prototype.getPayment=function(e){var t=this.payments.filter(function(t){return t.id==e});return t?t[0]:null},PaymentList.prototype.calculateTotal=function(){var e=0;$.each(this.payments,function(t,a){var n=a.amount||0;e+=Number(n)}),this.total=e,$("#order-paid").val(this.total);var t=$("#payments").data("balance");this.calculateBalance(t)},PaymentList.prototype.calculateBalance=function(e){var t=0,a=0,n=$("#order-total-price").val();e<0?a=Math.abs(e):t=Math.abs(e),0!=this.eventStatus&&void 0!=this.eventStatus||(this.total>n?t+=this.total-n:this.total<n&&(a+=n-this.total)),$(".payment-deposit").text(t),$(".payment-debt").text(a)},$("#payments").on("click","#js-order-use-cashback-button",function(e){var t=$("#payments").find(".payment-cashback").text();$(".payment_cashback_input .order_payment_item").val(t),$(".order_payment_item").each(function(){var e=$(this).val(),a=Math.min(t,e);t-=a,e-=a,$(this).val(e)}),$("#payments").find(".payment-cashback").hide(),$(this).hide(),$(".payment_cashback_input").show()}),$(".js-new-referrer").click(function(e){e.preventDefault();var t=$(this).attr("href");bootbox.prompt("Добавить направление",function(e){e&&$.post(t,{name:e}).done(function(e){addOption("order-referrer_id",e),$("#order-referrer_id").trigger("change")}).fail(function(e){alertMessage("Произошла ошибка")})})}),$("#products").find(".js-add-product").click(addProduct),$("#products").on("change",".product-price > input",updateProductPrice),$("#products").on("change",".product-quantity > input",updateProductQuantity);
"use strict";function Product(t){this.data=t}function initSelect2Loading(t,e){initS2Loading(t,e),$("span.select2.select2-container").addClass("input-sm"),initS2SelectHandler(t)}function initSelect2DropStyle(t,e,o){initS2Open(t,e,o)}function initS2SelectHandler(t){$("#"+t).on("select2:select",function(t){selectWarehouseProduct(t)})}function selectWarehouseProduct(t){var e=t.params.data,o=$(t.target).closest("tr"),n=o.find(".product-quantity").val(),a=o.find(".product-discount").val();""===n&&(n=0),""===a&&(a=0),e.quantity=n,e.discount=a;var c=$(t.target).attr("id"),r=getProductKey(c);products[r]=new Product(e),fillCells(o,e),calcWarehouseTotal()}function fillCells(t,e){t.find(".product-unit").text(e.unit),t.find(".product-price").val(e.price).change(),t.find(".product-discount").val(e.discount).change(),t.find(".product-cost").text(getProductCost(e.price,e.quantity,e.discount)),t.find(".product-stock-level").text(e.stock_level)}function calcWarehouseTotal(){var t=0,e=0,o=0;$.each(products,function(n,a){var c=0,r=void 0!==a.data?a.data:a,i=getProductCost(r.price,r.quantity,r.discount);$.isNumeric(r.vat)&&0!==r.vat&&(c=+(i/r.vat).toFixed(2)),t+=i,o+=c,e+=i-c}),$(".products-total").text(t),$(".sale-subtotal").text(e),$(".sale-tax").text(o),$("#sale-paid").val(t)}function getProductKey(t){var e=t.indexOf("-");return t.substr(e+1).replace("-product_id","")}function getProductCost(t,e,o){return Math.round((o?(100-o)/100:1)*+e*+t)}var products=[];$(function(){function t(t){var e=void 0;e="customer"==t?function(){var t=function(){bootbox.hideAll()};return a.submit(t),!1}:"companycontractor"==t?function(){var t=function(t,e){bootbox.hideAll(),o("delivery-contractor_id",t,e),$("#delivery-contractor_id").trigger("change")};return a.submit(t),!1}:function(){var t=function(t,e){bootbox.hideAll(),o("product-"+a.className+"_id",t,e)};return a.submit(t),!1},a.dialogButtons.success.callback=e}function e(e,o,n){$.get(o).done(function(o){a.className=e,t(e),dialogMessage(o,a.dialogButtons,n)}).fail(function(){alertMessage("Произошла ошибка")})}function o(t,e,o){var n=$("#"+t);n.append($("<option></option>").attr("value",e).text(o)),n.val(e)}function n(t,e){var o=$(t.target).closest("tr").find("select").attr("id"),n=getProductKey(o);products[n].data[e]=$(t.target).val();var a=getProductCost(products[n].data.price,products[n].data.quantity,products[n].data.discount);$(t.target).closest("tr").find(".product-cost").text(a),calcWarehouseTotal()}var a={className:null,dialogButtons:{success:{label:"Сохранить",className:"btn-primary"},danger:{label:"Отмена",className:"btn-default"}},submit:function(t){var e=$("#"+a.className+"-form"),o=e.attr("action");$.post(o,e.serialize()).done(function(e){e=JSON.parse(e),e.errors&&a.setErrors(e.errors),"success"==e.status&&(e.data?t(e.data.id,e.data.name):t())}).fail(function(){alertMessage("Произошла ошибка")})},setErrors:function(t){$.each(t,function(t,e){var o=$(".field-"+a.className+"-"+t);o.addClass("has-error"),o.find(".help-block").text(e[0])})}};$(".stock_new_entity_link").click(function(t){t.preventDefault();var o=$(t.target).attr("href");e($(t.target).data("model"),o,$(t.target).data("title"))}),$(".product-quantity").change(function(t){n(t,"quantity");var e=$(event.target),o=e.closest("tr").find(".product-stock-level").text();$.isNumeric(o)&&e.val()>Number(o)?(e.popover({placement:"left",content:"Недостаточно товара на складе",trigger:"manual"}),e.popover("show")):e.popover("destroy")}),$(".product-price").change(function(t){n(t,"price")}),$(".product-discount").change(function(t){n(t,"discount")}),$(".dynamicform_wrapper_products").on("afterInsert",function(t,e){$(e).find(".product-quantity").val(1),$(e).find(".product-discount").val(0),$(e).find(".product-quantity").change(function(t){n(t,"quantity")}),$(e).find(".product-price").change(function(t){n(t,"price")}),$(e).find(".product-discount").change(function(t){n(t,"discount")})}),$(".dynamicform_wrapper_products").on("beforeDelete",function(t,e){var o=$(e).find("select").attr("id"),n=getProductKey(o);products.splice(n,1)}),$(".dynamicform_wrapper_products").on("afterDelete",function(t,e){calcWarehouseTotal()}),function(){var t=$("#model-products").data("products");$.each(t,function(t,e){products[t]=new Product(e)})}()});
"use strict";var moveSourcesUrl="/customer/source/move";$(".js-course-move").on("click",function(){var o=$(this).data("source");bootbox.prompt({title:"Перенести клиентов в",inputType:"select",inputOptions:sourcesList,callback:function(t){$.get(moveSourcesUrl,{source:o,destination:t}).done(function(o){$.jGrowl(o.updated+" клиент(а/ов) перенесено",{group:"flash_notice"}),location.reload()}).fail(function(){$.jGrowl("Ошибка переноса клиентов",{group:"flash_alert"})})}})});
"use strict";$(document).ready(function(){var e=$(".product-index"),t=!1,o=function(e){var t=$(".js-selected");e?t.removeClass("disabled"):t.addClass("disabled")};$(e).on("change","input[type=checkbox]",function(e){var t=$("#products").yiiGridView("getSelectedRows");o(t.length>0)});var c=void 0;e.on("click",".js-selected",function(){t=!1,c=$("#products").yiiGridView("getSelectedRows")});var d=function(e){var t={products:e};$.post(n,t,function(e){$("#products-container").addClass("loading"),location.reload()})};e.on("click",".js-button-delete:not(.disabled)",function(){!0===confirm("Вы уверены что хотите удалить данные товары?")&&c&&d(c)});var n="batch-delete"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
